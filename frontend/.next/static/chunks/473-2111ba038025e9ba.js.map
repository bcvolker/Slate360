{"version":3,"file":"static/chunks/473-2111ba038025e9ba.js","mappings":"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","sources":["webpack://_N_E/./src/components/DemoModeToggle.tsx","webpack://_N_E/./src/components/HelpIcon.tsx","webpack://_N_E/./src/components/Modal.tsx","webpack://_N_E/./src/components/ProcessGuide.tsx","webpack://_N_E/./src/components/ProjectAnalytics.tsx","webpack://_N_E/./src/components/SyncStatus.tsx","webpack://_N_E/./src/components/VirtualProjectList.tsx","webpack://_N_E/./src/hooks/useDemoMode.ts","webpack://_N_E/<anon>"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { Play, Square, Database, RefreshCw, CheckCircle, AlertCircle } from 'lucide-react';\r\nimport { useRole } from '../hooks/useRole';\r\n\r\ninterface DemoModeToggleProps {\r\n  onDemoModeChange?: (enabled: boolean) => void;\r\n  className?: string;\r\n}\r\n\r\nexport default function DemoModeToggle({ onDemoModeChange, className = '' }: DemoModeToggleProps) {\r\n  const { isCEO, isAdmin } = useRole();\r\n  const [isDemoMode, setIsDemoMode] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [lastAction, setLastAction] = useState<'success' | 'error' | null>(null);\r\n\r\n  // Check if demo mode is enabled on mount\r\n  useEffect(() => {\r\n    const savedDemoMode = localStorage.getItem('slate360_demo_mode');\r\n    if (savedDemoMode === 'true') {\r\n      setIsDemoMode(true);\r\n      onDemoModeChange?.(true);\r\n    }\r\n  }, [onDemoModeChange]);\r\n\r\n  // Only show for CEO/Admin users\r\n  if (!isCEO && !isAdmin) {\r\n    return null;\r\n  }\r\n\r\n  const handleToggle = async () => {\r\n    if (isLoading) return;\r\n\r\n    setIsLoading(true);\r\n    setLastAction(null);\r\n\r\n    try {\r\n      if (!isDemoMode) {\r\n        // Enable demo mode\r\n        await enableDemoMode();\r\n        setIsDemoMode(true);\r\n        localStorage.setItem('slate360_demo_mode', 'true');\r\n        onDemoModeChange?.(true);\r\n        setLastAction('success');\r\n      } else {\r\n        // Disable demo mode\r\n        await disableDemoMode();\r\n        setIsDemoMode(false);\r\n        localStorage.removeItem('slate360_demo_mode');\r\n        onDemoModeChange?.(false);\r\n        setLastAction('success');\r\n      }\r\n    } catch (error) {\r\n      console.error('Demo mode toggle failed:', error);\r\n      setLastAction('error');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const enableDemoMode = async () => {\r\n    // Simulate loading demo data\r\n    await new Promise(resolve => setTimeout(resolve, 2000));\r\n    \r\n    // In a real implementation, this would:\r\n    // 1. Load mock projects, users, and data\r\n    // 2. Set up demo environment\r\n    // 3. Initialize sample workflows\r\n    console.log('Demo mode enabled - loading mock data...');\r\n  };\r\n\r\n  const disableDemoMode = async () => {\r\n    // Simulate cleaning up demo data\r\n    await new Promise(resolve => setTimeout(resolve, 1000));\r\n    \r\n    // In a real implementation, this would:\r\n    // 1. Clear demo data\r\n    // 2. Restore production environment\r\n    // 3. Clean up temporary files\r\n    console.log('Demo mode disabled - cleaning up...');\r\n  };\r\n\r\n  const refreshDemoData = async () => {\r\n    if (isLoading || !isDemoMode) return;\r\n\r\n    setIsLoading(true);\r\n    setLastAction(null);\r\n\r\n    try {\r\n      await new Promise(resolve => setTimeout(resolve, 1500));\r\n      console.log('Demo data refreshed');\r\n      setLastAction('success');\r\n    } catch (error) {\r\n      console.error('Failed to refresh demo data:', error);\r\n      setLastAction('error');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`bg-white rounded-lg shadow-sm border border-gray-200 p-4 ${className}`}>\r\n      <div className=\"flex items-center justify-between mb-4\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          <div className=\"w-10 h-10 bg-gradient-to-r from-blue-500 to-purple-500 rounded-lg flex items-center justify-center\">\r\n            <Database className=\"w-5 h-5 text-white\" />\r\n          </div>\r\n          <div>\r\n            <h3 className=\"text-lg font-semibold text-gray-900\">Demo Mode</h3>\r\n            <p className=\"text-sm text-gray-600\">\r\n              {isDemoMode ? 'Currently showing sample data' : 'Show sample data for demonstrations'}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"flex items-center space-x-2\">\r\n          {isDemoMode && (\r\n            <motion.button\r\n              whileHover={{ scale: 1.05 }}\r\n              whileTap={{ scale: 0.95 }}\r\n              onClick={refreshDemoData}\r\n              disabled={isLoading}\r\n              className=\"p-2 text-gray-500 hover:text-blue-600 transition-colors disabled:opacity-50\"\r\n              title=\"Refresh demo data\"\r\n            >\r\n              <RefreshCw className={`w-4 h-4 ${isLoading ? 'animate-spin' : ''}`} />\r\n            </motion.button>\r\n          )}\r\n          \r\n          <motion.button\r\n            whileHover={{ scale: 1.05 }}\r\n            whileTap={{ scale: 0.95 }}\r\n            onClick={handleToggle}\r\n            disabled={isLoading}\r\n            className={`relative inline-flex items-center px-4 py-2 rounded-lg font-medium transition-all duration-200 ${\r\n              isDemoMode\r\n                ? 'bg-red-100 text-red-700 hover:bg-red-200 border border-red-300'\r\n                : 'bg-blue-100 text-blue-700 hover:bg-blue-200 border border-blue-300'\r\n            } disabled:opacity-50 disabled:cursor-not-allowed`}\r\n          >\r\n            {isLoading ? (\r\n              <>\r\n                <div className=\"w-4 h-4 border-2 border-current border-t-transparent rounded-full animate-spin mr-2\"></div>\r\n                {isDemoMode ? 'Disabling...' : 'Enabling...'}\r\n              </>\r\n            ) : (\r\n              <>\r\n                {isDemoMode ? (\r\n                  <>\r\n                    <Square className=\"w-4 h-4 mr-2\" />\r\n                    Disable Demo\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <Play className=\"w-4 h-4 mr-2\" />\r\n                    Enable Demo\r\n                  </>\r\n                )}\r\n              </>\r\n            )}\r\n          </motion.button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Status indicators */}\r\n      <div className=\"space-y-3\">\r\n        <div className=\"flex items-center justify-between text-sm\">\r\n          <span className=\"text-gray-600\">Status:</span>\r\n          <span className={`flex items-center space-x-2 ${\r\n            isDemoMode ? 'text-green-600' : 'text-gray-500'\r\n          }`}>\r\n            {isDemoMode ? (\r\n              <>\r\n                <CheckCircle className=\"w-4 h-4\" />\r\n                <span>Active</span>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <AlertCircle className=\"w-4 h-4\" />\r\n                <span>Inactive</span>\r\n              </>\r\n            )}\r\n          </span>\r\n        </div>\r\n\r\n        {isDemoMode && (\r\n          <>\r\n            <div className=\"flex items-center justify-between text-sm\">\r\n              <span className=\"text-gray-600\">Sample Projects:</span>\r\n              <span className=\"text-gray-900 font-medium\">12</span>\r\n            </div>\r\n            <div className=\"flex items-center justify-between text-sm\">\r\n              <span className=\"text-gray-600\">Sample Users:</span>\r\n              <span className=\"text-gray-900 font-medium\">8</span>\r\n            </div>\r\n            <div className=\"flex items-center justify-between text-sm\">\r\n              <span className=\"text-gray-600\">Last Updated:</span>\r\n              <span className=\"text-gray-900 font-medium\">\r\n                {new Date().toLocaleDateString()}\r\n              </span>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        {/* Action feedback */}\r\n        {lastAction && (\r\n          <motion.div\r\n            initial={{ opacity: 0, y: 10 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            className={`flex items-center space-x-2 text-sm p-2 rounded-md ${\r\n              lastAction === 'success' \r\n                ? 'bg-green-50 text-green-700 border border-green-200' \r\n                : 'bg-red-50 text-red-700 border border-red-200'\r\n            }`}\r\n          >\r\n            {lastAction === 'success' ? (\r\n              <CheckCircle className=\"w-4 h-4\" />\r\n            ) : (\r\n              <AlertCircle className=\"w-4 h-4\" />\r\n            )}\r\n            <span>\r\n              {lastAction === 'success' \r\n                ? `Demo mode ${isDemoMode ? 'enabled' : 'disabled'} successfully`\r\n                : 'Operation failed. Please try again.'\r\n              }\r\n            </span>\r\n          </motion.div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Warning for production */}\r\n      {isDemoMode && (\r\n        <div className=\"mt-4 p-3 bg-yellow-50 border border-yellow-200 rounded-md\">\r\n          <div className=\"flex items-start space-x-2\">\r\n            <AlertCircle className=\"w-5 h-5 text-yellow-600 mt-0.5 flex-shrink-0\" />\r\n            <div className=\"text-sm text-yellow-800\">\r\n              <p className=\"font-medium\">Demo Mode Active</p>\r\n              <p className=\"mt-1\">\r\n                You're currently viewing sample data. All changes are temporary and will be reset when demo mode is disabled.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { HelpCircle, X } from 'lucide-react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport remarkGfm from 'remark-gfm';\r\n\r\ninterface HelpIconProps {\r\n  content: string;\r\n  title?: string;\r\n  size?: 'sm' | 'md' | 'lg';\r\n  position?: 'top' | 'bottom' | 'left' | 'right';\r\n  maxWidth?: number;\r\n  className?: string;\r\n  iconClassName?: string;\r\n  tooltipClassName?: string;\r\n  showCloseButton?: boolean;\r\n  autoClose?: boolean;\r\n  autoCloseDelay?: number;\r\n  trigger?: 'click' | 'hover' | 'both';\r\n  disabled?: boolean;\r\n  ariaLabel?: string;\r\n}\r\n\r\nexport function HelpIcon({\r\n  content,\r\n  title,\r\n  size = 'md',\r\n  position = 'top',\r\n  maxWidth = 300,\r\n  className = '',\r\n  iconClassName = '',\r\n  tooltipClassName = '',\r\n  showCloseButton = true,\r\n  autoClose = false,\r\n  autoCloseDelay = 5000,\r\n  trigger = 'both',\r\n  disabled = false,\r\n  ariaLabel\r\n}: HelpIconProps) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isHovered, setIsHovered] = useState(false);\r\n  const iconRef = useRef<HTMLButtonElement>(null);\r\n  const tooltipRef = useRef<HTMLDivElement>(null);\r\n  const autoCloseTimeoutRef = useRef<NodeJS.Timeout>();\r\n\r\n  // Size configurations\r\n  const sizeConfig = {\r\n    sm: { icon: 16, padding: 8 },\r\n    md: { icon: 20, padding: 10 },\r\n    lg: { icon: 24, padding: 12 }\r\n  };\r\n\r\n  const currentSize = sizeConfig[size];\r\n\r\n  // Position configurations\r\n  const positionConfig = {\r\n    top: { \r\n      tooltip: 'bottom-full left-1/2 transform -translate-x-1/2 mb-2',\r\n      arrow: 'top-full left-1/2 transform -translate-x-1/2 -mt-1'\r\n    },\r\n    bottom: { \r\n      tooltip: 'top-full left-1/2 transform -translate-x-1/2 mt-2',\r\n      arrow: 'bottom-full left-1/2 transform -translate-x-1/2 -mb-1'\r\n    },\r\n    left: { \r\n      tooltip: 'right-full top-1/2 transform -translate-y-1/2 mr-2',\r\n      arrow: 'left-full top-1/2 transform -translate-y-1/2 -ml-1'\r\n    },\r\n    right: { \r\n      tooltip: 'left-full top-1/2 transform -translate-y-1/2 ml-2',\r\n      arrow: 'right-full top-1/2 transform -translate-y-1/2 -mr-1'\r\n    }\r\n  };\r\n\r\n  const currentPosition = positionConfig[position];\r\n\r\n  // Handle auto-close\r\n  useEffect(() => {\r\n    if (autoClose && isOpen) {\r\n      autoCloseTimeoutRef.current = setTimeout(() => {\r\n        setIsOpen(false);\r\n      }, autoCloseDelay);\r\n    }\r\n\r\n    return () => {\r\n      if (autoCloseTimeoutRef.current) {\r\n        clearTimeout(autoCloseTimeoutRef.current);\r\n      }\r\n    };\r\n  }, [autoClose, isOpen, autoCloseDelay]);\r\n\r\n  // Handle click outside\r\n  useEffect(() => {\r\n    const handleClickOutside = (event: MouseEvent) => {\r\n      if (\r\n        iconRef.current && \r\n        !iconRef.current.contains(event.target as Node) &&\r\n        tooltipRef.current && \r\n        !tooltipRef.current.contains(event.target as Node)\r\n      ) {\r\n        setIsOpen(false);\r\n      }\r\n    };\r\n\r\n    if (isOpen) {\r\n      document.addEventListener('mousedown', handleClickOutside);\r\n    }\r\n\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, [isOpen]);\r\n\r\n  // Handle escape key\r\n  useEffect(() => {\r\n    const handleEscape = (event: KeyboardEvent) => {\r\n      if (event.key === 'Escape' && isOpen) {\r\n        setIsOpen(false);\r\n      }\r\n    };\r\n\r\n    if (isOpen) {\r\n      document.addEventListener('keydown', handleEscape);\r\n    }\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', handleEscape);\r\n    };\r\n  }, [isOpen]);\r\n\r\n  // Handle hover events\r\n  const handleMouseEnter = () => {\r\n    if (disabled) return;\r\n    \r\n    setIsHovered(true);\r\n    if (trigger === 'hover' || trigger === 'both') {\r\n      setIsOpen(true);\r\n    }\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    if (disabled) return;\r\n    \r\n    setIsHovered(false);\r\n    if (trigger === 'hover' || trigger === 'both') {\r\n      // Small delay to prevent flickering\r\n      setTimeout(() => {\r\n        if (!isHovered) {\r\n          setIsOpen(false);\r\n        }\r\n      }, 100);\r\n    }\r\n  };\r\n\r\n  // Handle click events\r\n  const handleClick = () => {\r\n    if (disabled) return;\r\n    \r\n    if (trigger === 'click' || trigger === 'both') {\r\n      setIsOpen(!isOpen);\r\n    }\r\n  };\r\n\r\n  // Handle close\r\n  const handleClose = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  // Handle focus for keyboard navigation\r\n  const handleFocus = () => {\r\n    if (disabled) return;\r\n    \r\n    if (trigger === 'hover' || trigger === 'both') {\r\n      setIsOpen(true);\r\n    }\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    if (disabled) return;\r\n    \r\n    // Small delay to allow focus to move to tooltip\r\n    setTimeout(() => {\r\n      if (!iconRef.current?.contains(document.activeElement)) {\r\n        setIsOpen(false);\r\n      }\r\n    }, 100);\r\n  };\r\n\r\n  // Animation variants\r\n  const tooltipVariants = {\r\n    hidden: {\r\n      opacity: 0,\r\n      scale: 0.8,\r\n      y: position === 'top' ? 10 : position === 'bottom' ? -10 : 0,\r\n      x: position === 'left' ? 10 : position === 'right' ? -10 : 0\r\n    },\r\n    visible: {\r\n      opacity: 1,\r\n      scale: 1,\r\n      y: 0,\r\n      x: 0\r\n    }\r\n  };\r\n\r\n  const iconVariants = {\r\n    idle: { scale: 1, rotate: 0 },\r\n    hover: { scale: 1.1, rotate: 5 },\r\n    active: { scale: 0.95, rotate: -2 }\r\n  };\r\n\r\n  if (disabled) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className={`help-icon-container relative inline-block ${className}`}>\r\n      {/* Help Icon Button */}\r\n      <motion.button\r\n        ref={iconRef}\r\n        type=\"button\"\r\n        onClick={handleClick}\r\n        onMouseEnter={handleMouseEnter}\r\n        onMouseLeave={handleMouseLeave}\r\n        onFocus={handleFocus}\r\n        onBlur={handleBlur}\r\n        disabled={disabled}\r\n        className={`\r\n          help-icon-button\r\n          inline-flex items-center justify-center\r\n          rounded-full\r\n          text-gray-400 hover:text-blue-500\r\n          focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\r\n          transition-colors duration-200\r\n          ${iconClassName}\r\n        `}\r\n        style={{\r\n          width: currentSize.icon + currentSize.padding * 2,\r\n          height: currentSize.icon + currentSize.padding * 2\r\n        }}\r\n        aria-label={ariaLabel || `Help information${title ? ` for ${title}` : ''}`}\r\n        aria-expanded={isOpen}\r\n        aria-haspopup=\"dialog\"\r\n        variants={iconVariants}\r\n        initial=\"idle\"\r\n        whileHover=\"hover\"\r\n        whileTap=\"active\"\r\n        animate={isOpen ? \"active\" : isHovered ? \"hover\" : \"idle\"}\r\n      >\r\n        <HelpCircle \r\n          size={currentSize.icon} \r\n          className=\"transition-colors duration-200\"\r\n        />\r\n      </motion.button>\r\n\r\n      {/* Tooltip */}\r\n      <AnimatePresence>\r\n        {isOpen && (\r\n          <motion.div\r\n            ref={tooltipRef}\r\n            className={`\r\n              help-tooltip\r\n              absolute z-50\r\n              ${currentPosition.tooltip}\r\n              ${tooltipClassName}\r\n            `}\r\n            style={{ maxWidth: `${maxWidth}px` }}\r\n            variants={tooltipVariants}\r\n            initial=\"hidden\"\r\n            animate=\"visible\"\r\n            exit=\"hidden\"\r\n            transition={{\r\n              type: \"spring\",\r\n              damping: 25,\r\n              stiffness: 300,\r\n              duration: 0.2\r\n            }}\r\n            role=\"dialog\"\r\n            aria-labelledby={title ? \"help-tooltip-title\" : undefined}\r\n            aria-describedby=\"help-tooltip-content\"\r\n          >\r\n            {/* Tooltip Content */}\r\n            <div className=\"\r\n              bg-gray-900 text-white\r\n              rounded-lg shadow-2xl\r\n              border border-gray-700\r\n              overflow-hidden\r\n            \">\r\n              {/* Header */}\r\n              {(title || showCloseButton) && (\r\n                <div className=\"\r\n                  flex items-center justify-between\r\n                  px-4 py-3\r\n                  bg-gray-800 border-b border-gray-700\r\n                \">\r\n                  {title && (\r\n                    <h3 \r\n                      id=\"help-tooltip-title\"\r\n                      className=\"text-sm font-semibold text-white\"\r\n                    >\r\n                      {title}\r\n                    </h3>\r\n                  )}\r\n                  {showCloseButton && (\r\n                    <button\r\n                      onClick={handleClose}\r\n                      className=\"\r\n                        p-1 rounded-md\r\n                        text-gray-400 hover:text-white\r\n                        hover:bg-gray-700\r\n                        focus:outline-none focus:ring-2 focus:ring-blue-500\r\n                        transition-colors duration-200\r\n                      \"\r\n                      aria-label=\"Close help tooltip\"\r\n                    >\r\n                      <X size={16} />\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              )}\r\n\r\n              {/* Content */}\r\n              <div \r\n                id=\"help-tooltip-content\"\r\n                className=\"px-4 py-3 text-sm leading-relaxed\"\r\n              >\r\n                <ReactMarkdown\r\n                  remarkPlugins={[remarkGfm]}\r\n                  components={{\r\n                    // Customize markdown components for better styling\r\n                    p: ({ children }) => (\r\n                      <p className=\"mb-2 last:mb-0\">{children}</p>\r\n                    ),\r\n                    ul: ({ children }) => (\r\n                      <ul className=\"list-disc list-inside mb-2 space-y-1\">{children}</ul>\r\n                    ),\r\n                    ol: ({ children }) => (\r\n                      <ol className=\"list-decimal list-inside mb-2 space-y-1\">{children}</ol>\r\n                    ),\r\n                    li: ({ children }) => (\r\n                      <li className=\"text-gray-200\">{children}</li>\r\n                    ),\r\n                    strong: ({ children }) => (\r\n                      <strong className=\"font-semibold text-white\">{children}</strong>\r\n                    ),\r\n                    em: ({ children }) => (\r\n                      <em className=\"italic text-gray-300\">{children}</em>\r\n                    ),\r\n                    code: ({ children, className }) => {\r\n                      const isInline = !className;\r\n                      return isInline ? (\r\n                        <code className=\"px-1 py-0.5 bg-gray-700 rounded text-xs font-mono text-blue-300\">\r\n                          {children}\r\n                        </code>\r\n                      ) : (\r\n                        <code className=\"block p-2 bg-gray-800 rounded text-xs font-mono text-blue-300 overflow-x-auto\">\r\n                          {children}\r\n                        </code>\r\n                      );\r\n                    },\r\n                    pre: ({ children }) => (\r\n                      <pre className=\"p-2 bg-gray-800 rounded text-xs font-mono text-blue-300 overflow-x-auto\">\r\n                        {children}\r\n                      </pre>\r\n                    ),\r\n                    blockquote: ({ children }) => (\r\n                      <blockquote className=\"pl-3 border-l-2 border-blue-500 text-gray-300 italic\">\r\n                        {children}\r\n                      </blockquote>\r\n                    ),\r\n                    a: ({ href, children }) => (\r\n                      <a \r\n                        href={href} \r\n                        className=\"text-blue-400 hover:text-blue-300 underline\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                      >\r\n                        {children}\r\n                      </a>\r\n                    ),\r\n                    h1: ({ children }) => (\r\n                      <h1 className=\"text-lg font-bold text-white mb-2\">{children}</h1>\r\n                    ),\r\n                    h2: ({ children }) => (\r\n                      <h2 className=\"text-base font-semibold text-white mb-2\">{children}</h2>\r\n                    ),\r\n                    h3: ({ children }) => (\r\n                      <h3 className=\"text-sm font-semibold text-white mb-1\">{children}</h3>\r\n                    ),\r\n                    table: ({ children }) => (\r\n                      <div className=\"overflow-x-auto\">\r\n                        <table className=\"min-w-full border-collapse border border-gray-600\">\r\n                          {children}\r\n                        </table>\r\n                      </div>\r\n                    ),\r\n                    th: ({ children }) => (\r\n                      <th className=\"border border-gray-600 px-2 py-1 bg-gray-700 text-white text-left\">\r\n                        {children}\r\n                      </th>\r\n                    ),\r\n                    td: ({ children }) => (\r\n                      <td className=\"border border-gray-600 px-2 py-1 text-gray-200\">\r\n                        {children}\r\n                      </td>\r\n                    )\r\n                  }}\r\n                >\r\n                  {content}\r\n                </ReactMarkdown>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Arrow */}\r\n            <div className={`\r\n              absolute w-2 h-2 bg-gray-900 border border-gray-700\r\n              transform rotate-45\r\n              ${currentPosition.arrow}\r\n            `} />\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Export default\r\nexport default HelpIcon;\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { X } from 'lucide-react';\r\n\r\nexport interface ModalProps {\r\n  // Core props\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  title?: string;\r\n  children: React.ReactNode;\r\n  \r\n  // Customization\r\n  size?: 'sm' | 'md' | 'lg' | 'xl' | 'full';\r\n  closeOnOverlayClick?: boolean;\r\n  closeOnEscape?: boolean;\r\n  showCloseButton?: boolean;\r\n  preventClose?: boolean;\r\n  \r\n  // Styling\r\n  className?: string;\r\n  overlayClassName?: string;\r\n  contentClassName?: string;\r\n  headerClassName?: string;\r\n  \r\n  // Animation\r\n  animation?: 'fade' | 'slide' | 'scale' | 'slideUp';\r\n  animationDuration?: number;\r\n  \r\n  // Accessibility\r\n  ariaLabel?: string;\r\n  ariaDescribedBy?: string;\r\n}\r\n\r\n// Size configurations\r\nconst sizeClasses = {\r\n  sm: 'max-w-sm',\r\n  md: 'max-w-md',\r\n  lg: 'max-w-lg',\r\n  xl: 'max-w-xl',\r\n  full: 'max-w-full mx-4'\r\n};\r\n\r\n// Animation variants\r\nconst animationVariants = {\r\n  fade: {\r\n    initial: { opacity: 0 },\r\n    animate: { opacity: 1 },\r\n    exit: { opacity: 0 }\r\n  },\r\n  slide: {\r\n    initial: { opacity: 0, x: -100 },\r\n    animate: { opacity: 1, x: 0 },\r\n    exit: { opacity: 0, x: 100 }\r\n  },\r\n  scale: {\r\n    initial: { opacity: 0, scale: 0.8 },\r\n    animate: { opacity: 1, scale: 1 },\r\n    exit: { opacity: 0, scale: 0.8 }\r\n  },\r\n  slideUp: {\r\n    initial: { opacity: 0, y: 50 },\r\n    animate: { opacity: 1, y: 0 },\r\n    exit: { opacity: 0, y: 50 }\r\n  }\r\n};\r\n\r\nexport function Modal({\r\n  // Core props\r\n  isOpen,\r\n  onClose,\r\n  title,\r\n  children,\r\n  \r\n  // Customization\r\n  size = 'md',\r\n  closeOnOverlayClick = true,\r\n  closeOnEscape = true,\r\n  showCloseButton = true,\r\n  preventClose = false,\r\n  \r\n  // Styling\r\n  className = '',\r\n  overlayClassName = '',\r\n  contentClassName = '',\r\n  headerClassName = '',\r\n  \r\n  // Animation\r\n  animation = 'fade',\r\n  animationDuration = 0.3,\r\n  \r\n  // Accessibility\r\n  ariaLabel,\r\n  ariaDescribedBy\r\n}: ModalProps) {\r\n  const modalRef = useRef<HTMLDivElement>(null);\r\n  const previousActiveElement = useRef<HTMLElement | null>(null);\r\n\r\n  // Handle escape key\r\n  useEffect(() => {\r\n    if (!closeOnEscape || preventClose) return;\r\n\r\n    const handleEscape = (event: KeyboardEvent) => {\r\n      if (event.key === 'Escape') {\r\n        onClose();\r\n      }\r\n    };\r\n\r\n    if (isOpen) {\r\n      document.addEventListener('keydown', handleEscape);\r\n      // Store the previously focused element\r\n      previousActiveElement.current = document.activeElement as HTMLElement;\r\n      // Focus the modal\r\n      modalRef.current?.focus();\r\n    }\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', handleEscape);\r\n      // Restore focus when modal closes\r\n      if (previousActiveElement.current) {\r\n        previousActiveElement.current.focus();\r\n      }\r\n    };\r\n  }, [isOpen, onClose, closeOnEscape, preventClose]);\r\n\r\n  // Prevent body scroll when modal is open\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      document.body.style.overflow = 'hidden';\r\n    } else {\r\n      document.body.style.overflow = 'unset';\r\n    }\r\n\r\n    return () => {\r\n      document.body.style.overflow = 'unset';\r\n    };\r\n  }, [isOpen]);\r\n\r\n  // Handle overlay click\r\n  const handleOverlayClick = (event: React.MouseEvent) => {\r\n    if (event.target === event.currentTarget && closeOnOverlayClick && !preventClose) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  // Handle close button click\r\n  const handleCloseClick = () => {\r\n    if (!preventClose) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  // Get animation variants\r\n  const getAnimationVariants = () => {\r\n    const baseVariants = animationVariants[animation];\r\n    return {\r\n      overlay: {\r\n        initial: { opacity: 0 },\r\n        animate: { opacity: 1 },\r\n        exit: { opacity: 0 }\r\n      },\r\n      content: {\r\n        initial: baseVariants.initial,\r\n        animate: baseVariants.animate,\r\n        exit: baseVariants.exit\r\n      }\r\n    };\r\n  };\r\n\r\n  const variants = getAnimationVariants();\r\n\r\n  return (\r\n    <AnimatePresence>\r\n      {isOpen && (\r\n        <motion.div\r\n          className={`fixed inset-0 z-50 flex items-center justify-center p-4 ${overlayClassName}`}\r\n          initial=\"initial\"\r\n          animate=\"animate\"\r\n          exit=\"exit\"\r\n          variants={variants.overlay}\r\n          transition={{ duration: animationDuration }}\r\n          onClick={handleOverlayClick}\r\n          role=\"dialog\"\r\n          aria-modal=\"true\"\r\n          aria-label={ariaLabel || title}\r\n          aria-describedby={ariaDescribedBy}\r\n        >\r\n          {/* Backdrop */}\r\n          <div className=\"absolute inset-0 bg-black/50 backdrop-blur-sm\" />\r\n          \r\n          {/* Modal Content */}\r\n          <motion.div\r\n            ref={modalRef}\r\n            className={`relative bg-white rounded-lg shadow-2xl w-full ${sizeClasses[size]} ${className}`}\r\n            variants={variants.content}\r\n            transition={{ \r\n              duration: animationDuration,\r\n              type: \"spring\",\r\n              damping: 25,\r\n              stiffness: 300\r\n            }}\r\n            onClick={(e) => e.stopPropagation()}\r\n            tabIndex={-1}\r\n          >\r\n            {/* Header */}\r\n            {(title || showCloseButton) && (\r\n              <div className={`flex items-center justify-between p-6 border-b border-gray-200 ${headerClassName}`}>\r\n                {title && (\r\n                  <h2 className=\"text-xl font-semibold text-gray-900\">{title}</h2>\r\n                )}\r\n                {showCloseButton && (\r\n                  <button\r\n                    onClick={handleCloseClick}\r\n                    disabled={preventClose}\r\n                    className={`p-2 rounded-lg hover:bg-gray-100 transition-colors ${\r\n                      preventClose ? 'opacity-50 cursor-not-allowed' : 'hover:bg-gray-100'\r\n                    }`}\r\n                    aria-label=\"Close modal\"\r\n                  >\r\n                    <X className=\"w-5 h-5 text-gray-500\" />\r\n                  </button>\r\n                )}\r\n              </div>\r\n            )}\r\n            \r\n            {/* Content */}\r\n            <div className={`p-6 ${contentClassName}`}>\r\n              {children}\r\n            </div>\r\n          </motion.div>\r\n        </motion.div>\r\n      )}\r\n    </AnimatePresence>\r\n  );\r\n}\r\n\r\n// Specialized modal variants for common use cases\r\nexport function ConfirmModal({\r\n  isOpen,\r\n  onClose,\r\n  onConfirm,\r\n  title = \"Confirm Action\",\r\n  message = \"Are you sure you want to proceed?\",\r\n  confirmText = \"Confirm\",\r\n  cancelText = \"Cancel\",\r\n  confirmVariant = \"danger\",\r\n  ...props\r\n}: ModalProps & {\r\n  onConfirm: () => void;\r\n  message?: string;\r\n  confirmText?: string;\r\n  cancelText?: string;\r\n  confirmVariant?: 'primary' | 'danger' | 'success' | 'warning';\r\n}) {\r\n  const getConfirmButtonClasses = () => {\r\n    switch (confirmVariant) {\r\n      case 'danger':\r\n        return 'bg-red-600 hover:bg-red-700 text-white';\r\n      case 'success':\r\n        return 'bg-green-600 hover:bg-green-700 text-white';\r\n      case 'warning':\r\n        return 'bg-yellow-600 hover:bg-yellow-700 text-white';\r\n      default:\r\n        return 'bg-blue-600 hover:bg-blue-700 text-white';\r\n    }\r\n  };\r\n\r\n  const handleConfirm = () => {\r\n    onConfirm();\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      title={title}\r\n      size=\"sm\"\r\n      {...props}\r\n    >\r\n      <div className=\"space-y-4\">\r\n        <p className=\"text-gray-600\">{message}</p>\r\n        \r\n        <div className=\"flex justify-end space-x-3\">\r\n          <button\r\n            onClick={onClose}\r\n            className=\"px-4 py-2 text-gray-700 bg-gray-100 rounded-lg hover:bg-gray-200 transition-colors\"\r\n          >\r\n            {cancelText}\r\n          </button>\r\n          <button\r\n            onClick={handleConfirm}\r\n            className={`px-4 py-2 rounded-lg transition-colors ${getConfirmButtonClasses()}`}\r\n          >\r\n            {confirmText}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport function FormModal({\r\n  isOpen,\r\n  onClose,\r\n  title,\r\n  children,\r\n  onSubmit,\r\n  submitText = \"Submit\",\r\n  cancelText = \"Cancel\",\r\n  submitVariant = \"primary\",\r\n  loading = false,\r\n  ...props\r\n}: ModalProps & {\r\n  onSubmit: (e: React.FormEvent) => void;\r\n  submitText?: string;\r\n  cancelText?: string;\r\n  submitVariant?: 'primary' | 'success' | 'warning';\r\n  loading?: boolean;\r\n}) {\r\n  const getSubmitButtonClasses = () => {\r\n    switch (submitVariant) {\r\n      case 'success':\r\n        return 'bg-green-600 hover:bg-green-700 text-white';\r\n      case 'warning':\r\n        return 'bg-yellow-600 hover:bg-yellow-700 text-white';\r\n      default:\r\n        return 'bg-blue-600 hover:bg-blue-700 text-white';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      title={title}\r\n      size=\"lg\"\r\n      {...props}\r\n    >\r\n      <form onSubmit={onSubmit} className=\"space-y-4\">\r\n        {children}\r\n        \r\n        <div className=\"flex justify-end space-x-3 pt-4 border-t border-gray-200\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={onClose}\r\n            disabled={loading}\r\n            className=\"px-4 py-2 text-gray-700 bg-gray-100 rounded-lg hover:bg-gray-200 transition-colors disabled:opacity-50\"\r\n          >\r\n            {cancelText}\r\n          </button>\r\n          <button\r\n            type=\"submit\"\r\n            disabled={loading}\r\n            className={`px-4 py-2 rounded-lg transition-colors disabled:opacity-50 ${getSubmitButtonClasses()}`}\r\n          >\r\n            {loading ? (\r\n              <div className=\"flex items-center space-x-2\">\r\n                <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\" />\r\n                <span>Loading...</span>\r\n              </div>\r\n            ) : (\r\n              submitText\r\n            )}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </Modal>\r\n  );\r\n}\r\n\r\n// Export the main Modal component as default\r\nexport default Modal;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { BookOpen, ChevronDown, ChevronUp, X } from 'lucide-react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport remarkGfm from 'remark-gfm';\r\n\r\ninterface ProcessStep {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  status?: 'pending' | 'active' | 'completed' | 'error';\r\n  duration?: string;\r\n  requirements?: string[];\r\n  tips?: string[];\r\n}\r\n\r\ninterface ProcessGuideProps {\r\n  title: string;\r\n  steps: ProcessStep[];\r\n  variant?: 'default' | 'compact' | 'detailed';\r\n  theme?: 'light' | 'dark' | 'blue' | 'green';\r\n  maxHeight?: number;\r\n  className?: string;\r\n  buttonClassName?: string;\r\n  panelClassName?: string;\r\n  showStepNumbers?: boolean;\r\n  showProgress?: boolean;\r\n  collapsible?: boolean;\r\n  defaultOpen?: boolean;\r\n  autoClose?: boolean;\r\n  autoCloseDelay?: number;\r\n  disabled?: boolean;\r\n  ariaLabel?: string;\r\n}\r\n\r\nexport function ProcessGuide({\r\n  title,\r\n  steps,\r\n  variant = 'default',\r\n  theme = 'light',\r\n  maxHeight = 400,\r\n  className = '',\r\n  buttonClassName = '',\r\n  panelClassName = '',\r\n  showStepNumbers = true,\r\n  showProgress = true,\r\n  collapsible = true,\r\n  defaultOpen = false,\r\n  autoClose = false,\r\n  autoCloseDelay = 10000,\r\n  disabled = false,\r\n  ariaLabel\r\n}: ProcessGuideProps) {\r\n  const [isOpen, setIsOpen] = useState(defaultOpen);\r\n  const [activeStep, setActiveStep] = useState<string | null>(null);\r\n  const [completedSteps, setCompletedSteps] = useState<Set<string>>(new Set());\r\n  const buttonRef = useRef<HTMLButtonElement>(null);\r\n  const panelRef = useRef<HTMLDivElement>(null);\r\n  const autoCloseTimeoutRef = useRef<NodeJS.Timeout>();\r\n\r\n  // Theme configurations\r\n  const themeConfig = {\r\n    light: {\r\n      button: 'bg-gray-100 hover:bg-gray-200 text-gray-700 border-gray-300',\r\n      panel: 'bg-white border-gray-200 shadow-lg',\r\n      header: 'bg-gray-50 border-gray-200',\r\n      step: 'border-gray-200 hover:bg-gray-50',\r\n      stepActive: 'border-blue-500 bg-blue-50',\r\n      stepCompleted: 'border-green-500 bg-green-50',\r\n      stepError: 'border-red-500 bg-red-50'\r\n    },\r\n    dark: {\r\n      button: 'bg-gray-800 hover:bg-gray-700 text-gray-200 border-gray-600',\r\n      panel: 'bg-gray-900 border-gray-600 shadow-xl',\r\n      header: 'bg-gray-800 border-gray-600',\r\n      step: 'border-gray-600 hover:bg-gray-800',\r\n      stepActive: 'border-blue-400 bg-blue-900/20',\r\n      stepCompleted: 'border-green-400 bg-green-900/20',\r\n      stepError: 'border-red-400 bg-red-900/20'\r\n    },\r\n    blue: {\r\n      button: 'bg-blue-100 hover:bg-blue-200 text-blue-700 border-blue-300',\r\n      panel: 'bg-white border-blue-200 shadow-lg',\r\n      header: 'bg-blue-50 border-blue-200',\r\n      step: 'border-blue-200 hover:bg-blue-50',\r\n      stepActive: 'border-blue-500 bg-blue-50',\r\n      stepCompleted: 'border-green-500 bg-green-50',\r\n      stepError: 'border-red-500 bg-red-50'\r\n    },\r\n    green: {\r\n      button: 'bg-green-100 hover:bg-green-200 text-green-700 border-green-300',\r\n      panel: 'bg-white border-green-200 shadow-lg',\r\n      header: 'bg-green-50 border-green-200',\r\n      step: 'border-green-200 hover:bg-green-50',\r\n      stepActive: 'border-blue-500 bg-blue-50',\r\n      stepCompleted: 'border-green-500 bg-green-50',\r\n      stepError: 'border-red-500 bg-red-50'\r\n    }\r\n  };\r\n\r\n  const currentTheme = themeConfig[theme];\r\n\r\n  // Variant configurations\r\n  const variantConfig = {\r\n    default: { maxSteps: steps.length, showDetails: true },\r\n    compact: { maxSteps: Math.min(5, steps.length), showDetails: false },\r\n    detailed: { maxSteps: steps.length, showDetails: true }\r\n  };\r\n\r\n  const currentVariant = variantConfig[variant];\r\n  const displaySteps = steps.slice(0, currentVariant.maxSteps);\r\n\r\n  // Handle auto-close\r\n  useEffect(() => {\r\n    if (autoClose && isOpen) {\r\n      autoCloseTimeoutRef.current = setTimeout(() => {\r\n        setIsOpen(false);\r\n      }, autoCloseDelay);\r\n    }\r\n\r\n    return () => {\r\n      if (autoCloseTimeoutRef.current) {\r\n        clearTimeout(autoCloseTimeoutRef.current);\r\n      }\r\n    };\r\n  }, [autoClose, isOpen, autoCloseDelay]);\r\n\r\n  // Handle click outside\r\n  useEffect(() => {\r\n    const handleClickOutside = (event: MouseEvent) => {\r\n      if (\r\n        buttonRef.current && \r\n        !buttonRef.current.contains(event.target as Node) &&\r\n        panelRef.current && \r\n        !panelRef.current.contains(event.target as Node)\r\n      ) {\r\n        setIsOpen(false);\r\n      }\r\n    };\r\n\r\n    if (isOpen) {\r\n      document.addEventListener('mousedown', handleClickOutside);\r\n    }\r\n\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, [isOpen]);\r\n\r\n  // Handle escape key\r\n  useEffect(() => {\r\n    const handleEscape = (event: KeyboardEvent) => {\r\n      if (event.key === 'Escape' && isOpen) {\r\n        setIsOpen(false);\r\n      }\r\n    };\r\n\r\n    if (isOpen) {\r\n      document.addEventListener('keydown', handleEscape);\r\n    }\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', handleEscape);\r\n    };\r\n  }, [isOpen]);\r\n\r\n  // Toggle panel\r\n  const togglePanel = () => {\r\n    if (disabled) return;\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  // Handle step click\r\n  const handleStepClick = (stepId: string) => {\r\n    setActiveStep(activeStep === stepId ? null : stepId);\r\n  };\r\n\r\n  // Mark step as completed\r\n  const markStepCompleted = (stepId: string) => {\r\n    setCompletedSteps(prev => {\r\n      const newSet = new Set(prev);\r\n      newSet.add(stepId);\r\n      return newSet;\r\n    });\r\n  };\r\n\r\n  // Mark step as error\r\n  const markStepError = (stepId: string) => {\r\n    setCompletedSteps(prev => {\r\n      const newSet = new Set(prev);\r\n      newSet.delete(stepId);\r\n      return newSet;\r\n    });\r\n  };\r\n\r\n  // Calculate progress\r\n  const progress = showProgress ? (completedSteps.size / steps.length) * 100 : 0;\r\n\r\n  // Get step status\r\n  const getStepStatus = (step: ProcessStep) => {\r\n    if (completedSteps.has(step.id)) return 'completed';\r\n    if (activeStep === step.id) return 'active';\r\n    if (step.status) return step.status;\r\n    return 'pending';\r\n  };\r\n\r\n  // Get step status classes\r\n  const getStepStatusClasses = (status: string) => {\r\n    switch (status) {\r\n      case 'active':\r\n        return currentTheme.stepActive;\r\n      case 'completed':\r\n        return currentTheme.stepCompleted;\r\n      case 'error':\r\n        return currentTheme.stepError;\r\n      default:\r\n        return currentTheme.step;\r\n    }\r\n  };\r\n\r\n  // Animation variants\r\n  const panelVariants = {\r\n    hidden: {\r\n      opacity: 0,\r\n      height: 0,\r\n      scale: 0.95\r\n    },\r\n    visible: {\r\n      opacity: 1,\r\n      height: 'auto',\r\n      scale: 1\r\n    }\r\n  };\r\n\r\n  const stepVariants = {\r\n    hidden: { opacity: 0, x: -20 },\r\n    visible: (i: number) => ({\r\n      opacity: 1,\r\n      x: 0,\r\n      transition: {\r\n        delay: i * 0.1,\r\n        duration: 0.3\r\n      }\r\n    })\r\n  };\r\n\r\n  const buttonVariants = {\r\n    idle: { scale: 1, rotate: 0 },\r\n    hover: { scale: 1.05, rotate: 2 },\r\n    active: { scale: 0.95, rotate: -2 }\r\n  };\r\n\r\n  if (disabled) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className={`process-guide-container relative ${className}`}>\r\n      {/* Process Guide Button */}\r\n      <motion.button\r\n        ref={buttonRef}\r\n        type=\"button\"\r\n        onClick={togglePanel}\r\n        disabled={disabled}\r\n        className={`\r\n          process-guide-button\r\n          inline-flex items-center space-x-2\r\n          px-4 py-2 rounded-lg border\r\n          font-medium transition-all duration-200\r\n          focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\r\n          ${currentTheme.button}\r\n          ${buttonClassName}\r\n        `}\r\n        aria-label={ariaLabel || `Process guide for ${title}`}\r\n        aria-expanded={isOpen}\r\n        aria-controls=\"process-guide-panel\"\r\n        variants={buttonVariants}\r\n        initial=\"idle\"\r\n        whileHover=\"hover\"\r\n        whileTap=\"active\"\r\n        animate={isOpen ? \"active\" : \"idle\"}\r\n      >\r\n        <BookOpen size={18} />\r\n        <span>{title}</span>\r\n        <motion.div\r\n          animate={{ rotate: isOpen ? 180 : 0 }}\r\n          transition={{ duration: 0.2 }}\r\n        >\r\n          {isOpen ? <ChevronUp size={18} /> : <ChevronDown size={18} />}\r\n        </motion.div>\r\n      </motion.button>\r\n\r\n      {/* Process Guide Panel */}\r\n      <AnimatePresence>\r\n        {isOpen && (\r\n          <motion.div\r\n            ref={panelRef}\r\n            id=\"process-guide-panel\"\r\n            className={`\r\n              process-guide-panel\r\n              absolute top-full left-0 mt-2 z-50\r\n              w-96 max-w-sm\r\n              ${currentTheme.panel}\r\n              border rounded-lg\r\n              ${panelClassName}\r\n            `}\r\n            variants={panelVariants}\r\n            initial=\"hidden\"\r\n            animate=\"visible\"\r\n            exit=\"hidden\"\r\n            transition={{\r\n              type: \"spring\",\r\n              damping: 25,\r\n              stiffness: 300,\r\n              duration: 0.3\r\n            }}\r\n            role=\"dialog\"\r\n            aria-labelledby=\"process-guide-title\"\r\n            aria-describedby=\"process-guide-content\"\r\n          >\r\n            {/* Header */}\r\n            <div className={`\r\n              flex items-center justify-between\r\n              px-4 py-3 border-b\r\n              ${currentTheme.header}\r\n            `}>\r\n              <h3 \r\n                id=\"process-guide-title\"\r\n                className=\"text-lg font-semibold\"\r\n              >\r\n                {title}\r\n              </h3>\r\n              <button\r\n                onClick={togglePanel}\r\n                className=\"\r\n                  p-1 rounded-md\r\n                  text-gray-500 hover:text-gray-700\r\n                  hover:bg-gray-200\r\n                  focus:outline-none focus:ring-2 focus:ring-blue-500\r\n                  transition-colors duration-200\r\n                \"\r\n                aria-label=\"Close process guide\"\r\n              >\r\n                <X size={18} />\r\n              </button>\r\n            </div>\r\n\r\n            {/* Progress Bar */}\r\n            {showProgress && (\r\n              <div className=\"px-4 py-3 border-b border-gray-200\">\r\n                <div className=\"flex items-center justify-between mb-2\">\r\n                  <span className=\"text-sm font-medium text-gray-700\">Progress</span>\r\n                  <span className=\"text-sm text-gray-500\">\r\n                    {completedSteps.size} of {steps.length} steps\r\n                  </span>\r\n                </div>\r\n                <div className=\"w-full bg-gray-200 rounded-full h-2\">\r\n                  <motion.div\r\n                    className=\"bg-green-500 h-2 rounded-full transition-all duration-300\"\r\n                    initial={{ width: 0 }}\r\n                    animate={{ width: `${progress}%` }}\r\n                    transition={{ duration: 0.5, delay: 0.2 }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Content */}\r\n            <div \r\n              id=\"process-guide-content\"\r\n              className=\"p-4\"\r\n              style={{ maxHeight: `${maxHeight}px` }}\r\n            >\r\n              <div className=\"space-y-3\">\r\n                {displaySteps.map((step, index) => {\r\n                  const status = getStepStatus(step);\r\n                  const statusClasses = getStepStatusClasses(status);\r\n                  \r\n                  return (\r\n                    <motion.div\r\n                      key={step.id}\r\n                      custom={index}\r\n                      variants={stepVariants}\r\n                      initial=\"hidden\"\r\n                      animate=\"visible\"\r\n                      className={`\r\n                        process-step\r\n                        border rounded-lg p-3 cursor-pointer\r\n                        transition-all duration-200\r\n                        ${statusClasses}\r\n                      `}\r\n                      onClick={() => handleStepClick(step.id)}\r\n                    >\r\n                      {/* Step Header */}\r\n                      <div className=\"flex items-start space-x-3\">\r\n                        {showStepNumbers && (\r\n                          <div className={`\r\n                            flex-shrink-0 w-6 h-6 rounded-full\r\n                            flex items-center justify-center text-xs font-bold\r\n                            ${status === 'completed' ? 'bg-green-500 text-white' :\r\n                              status === 'active' ? 'bg-blue-500 text-white' :\r\n                              status === 'error' ? 'bg-red-500 text-white' :\r\n                              'bg-gray-300 text-gray-600'}\r\n                          `}>\r\n                            {status === 'completed' ? '✓' : index + 1}\r\n                          </div>\r\n                        )}\r\n                        \r\n                        <div className=\"flex-1 min-w-0\">\r\n                          <h4 className=\"font-medium text-gray-900 mb-1\">\r\n                            {step.title}\r\n                          </h4>\r\n                          \r\n                          {/* Step Description */}\r\n                          <div className=\"text-sm text-gray-600 mb-2\">\r\n                            <ReactMarkdown\r\n                              remarkPlugins={[remarkGfm]}\r\n                              components={{\r\n                                p: ({ children }) => <span>{children}</span>,\r\n                                strong: ({ children }) => (\r\n                                  <strong className=\"font-semibold\">{children}</strong>\r\n                                ),\r\n                                em: ({ children }) => (\r\n                                  <em className=\"italic\">{children}</em>\r\n                                ),\r\n                                code: ({ children }) => (\r\n                                  <code className=\"px-1 py-0.5 bg-gray-100 rounded text-xs font-mono\">\r\n                                    {children}\r\n                                  </code>\r\n                                )\r\n                              }}\r\n                            >\r\n                              {step.description}\r\n                            </ReactMarkdown>\r\n                          </div>\r\n\r\n                          {/* Step Details (if detailed variant and step is active) */}\r\n                          {currentVariant.showDetails && activeStep === step.id && (\r\n                            <motion.div\r\n                              initial={{ opacity: 0, height: 0 }}\r\n                              animate={{ opacity: 1, height: 'auto' }}\r\n                              exit={{ opacity: 0, height: 0 }}\r\n                              transition={{ duration: 0.3 }}\r\n                              className=\"space-y-3 pt-2 border-t border-gray-200\"\r\n                            >\r\n                              {/* Duration */}\r\n                              {step.duration && (\r\n                                <div className=\"text-xs text-gray-500\">\r\n                                  <strong>Duration:</strong> {step.duration}\r\n                                </div>\r\n                              )}\r\n\r\n                              {/* Requirements */}\r\n                              {step.requirements && step.requirements.length > 0 && (\r\n                                <div>\r\n                                  <div className=\"text-xs font-medium text-gray-700 mb-1\">\r\n                                    Requirements:\r\n                                  </div>\r\n                                  <ul className=\"text-xs text-gray-600 space-y-1\">\r\n                                    {step.requirements.map((req, reqIndex) => (\r\n                                      <li key={reqIndex} className=\"flex items-center space-x-2\">\r\n                                        <span className=\"w-1.5 h-1.5 bg-gray-400 rounded-full\" />\r\n                                        <span>{req}</span>\r\n                                      </li>\r\n                                    ))}\r\n                                  </ul>\r\n                                </div>\r\n                              )}\r\n\r\n                              {/* Tips */}\r\n                              {step.tips && step.tips.length > 0 && (\r\n                                <div>\r\n                                  <div className=\"text-xs font-medium text-blue-700 mb-1\">\r\n                                    Tips:\r\n                                  </div>\r\n                                  <ul className=\"text-xs text-blue-600 space-y-1\">\r\n                                    {step.tips.map((tip, tipIndex) => (\r\n                                      <li key={tipIndex} className=\"flex items-center space-x-2\">\r\n                                        <span className=\"w-1.5 h-1.5 bg-blue-400 rounded-full\" />\r\n                                        <span>{tip}</span>\r\n                                      </li>\r\n                                    ))}\r\n                                  </ul>\r\n                                </div>\r\n                              )}\r\n\r\n                              {/* Action Buttons */}\r\n                              <div className=\"flex space-x-2 pt-2\">\r\n                                <button\r\n                                  onClick={(e) => {\r\n                                    e.stopPropagation();\r\n                                    markStepCompleted(step.id);\r\n                                  }}\r\n                                  className=\"\r\n                                    px-2 py-1 text-xs\r\n                                    bg-green-500 text-white rounded\r\n                                    hover:bg-green-600\r\n                                    focus:outline-none focus:ring-2 focus:ring-green-500\r\n                                    transition-colors duration-200\r\n                                  \"\r\n                                >\r\n                                  Mark Complete\r\n                                </button>\r\n                                <button\r\n                                  onClick={(e) => {\r\n                                    e.stopPropagation();\r\n                                    markStepError(step.id);\r\n                                  }}\r\n                                  className=\"\r\n                                    px-2 py-1 text-xs\r\n                                    bg-red-500 text-white rounded\r\n                                    hover:bg-red-600\r\n                                    focus:outline-none focus:ring-2 focus:ring-red-500\r\n                                    transition-colors duration-200\r\n                                  \"\r\n                                >\r\n                                  Mark Error\r\n                                </button>\r\n                              </div>\r\n                            </motion.div>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </motion.div>\r\n                  );\r\n                })}\r\n              </div>\r\n\r\n              {/* Footer */}\r\n              <div className=\"mt-4 pt-3 border-t border-gray-200\">\r\n                <div className=\"text-xs text-gray-500 text-center\">\r\n                  {steps.length > currentVariant.maxSteps && (\r\n                    <p>Showing {currentVariant.maxSteps} of {steps.length} steps</p>\r\n                  )}\r\n                  <p>Click on any step to see more details</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Export default\r\nexport default ProcessGuide;\r\n","import React, { useState, useMemo } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { \r\n  BarChart3, \r\n  TrendingUp, \r\n  Clock, \r\n  DollarSign, \r\n  Users, \r\n  Target,\r\n  Calendar,\r\n  PieChart,\r\n  Activity,\r\n  ArrowUpRight,\r\n  ArrowDownRight\r\n} from 'lucide-react';\r\nimport { IProject } from '@/models/Project';\r\n\r\ninterface ProjectAnalyticsProps {\r\n  projects: IProject[];\r\n  className?: string;\r\n  showCharts?: boolean;\r\n  showMetrics?: boolean;\r\n  showTrends?: boolean;\r\n  timeRange?: 'week' | 'month' | 'quarter' | 'year' | 'all';\r\n}\r\n\r\ninterface AnalyticsData {\r\n  totalProjects: number;\r\n  activeProjects: number;\r\n  completedProjects: number;\r\n  onHoldProjects: number;\r\n  cancelledProjects: number;\r\n  totalBudget: number;\r\n  actualSpent: number;\r\n  budgetUtilization: number;\r\n  averageProjectDuration: number;\r\n  teamUtilization: number;\r\n  projectTypes: Record<string, number>;\r\n  statusDistribution: Record<string, number>;\r\n  monthlyProgress: Array<{\r\n    month: string;\r\n    completed: number;\r\n    started: number;\r\n    revenue: number;\r\n  }>;\r\n  performanceMetrics: {\r\n    onTimeDelivery: number;\r\n    budgetAdherence: number;\r\n    clientSatisfaction: number;\r\n    resourceEfficiency: number;\r\n  };\r\n}\r\n\r\nexport function ProjectAnalytics({\r\n  projects,\r\n  className = '',\r\n  showCharts = true,\r\n  showMetrics = true,\r\n  showTrends = true,\r\n  timeRange = 'all'\r\n}: ProjectAnalyticsProps) {\r\n  const [selectedMetric, setSelectedMetric] = useState<string>('overview');\r\n\r\n  // Calculate analytics data\r\n  const analyticsData = useMemo((): AnalyticsData => {\r\n    const now = new Date();\r\n    const filteredProjects = filterProjectsByTimeRange(projects, timeRange);\r\n\r\n    const totalProjects = filteredProjects.length;\r\n    const activeProjects = filteredProjects.filter(p => p.status === 'active').length;\r\n    const completedProjects = filteredProjects.filter(p => p.status === 'completed').length;\r\n    const onHoldProjects = filteredProjects.filter(p => p.status === 'on-hold').length;\r\n    const cancelledProjects = filteredProjects.filter(p => p.status === 'cancelled').length;\r\n\r\n    // Budget calculations\r\n    const totalBudget = filteredProjects.reduce((sum, p) => sum + (p.budget?.estimated || 0), 0);\r\n    const actualSpent = filteredProjects.reduce((sum, p) => sum + (p.budget?.actual || 0), 0);\r\n    const budgetUtilization = totalBudget > 0 ? (actualSpent / totalBudget) * 100 : 0;\r\n\r\n    // Duration calculations\r\n    const projectsWithTimeline = filteredProjects.filter(p => p.timeline?.startDate && p.timeline?.endDate);\r\n    const averageProjectDuration = projectsWithTimeline.length > 0\r\n      ? projectsWithTimeline.reduce((sum, p) => {\r\n          const start = new Date(p.timeline!.startDate!);\r\n          const end = new Date(p.timeline!.endDate!);\r\n          return sum + (end.getTime() - start.getTime()) / (1000 * 60 * 60 * 24);\r\n        }, 0) / projectsWithTimeline.length\r\n      : 0;\r\n\r\n    // Team utilization\r\n    const totalTeamMembers = filteredProjects.reduce((sum, p) => sum + (p.team?.length || 0), 0);\r\n    const uniqueTeamMembers = new Set(\r\n      filteredProjects.flatMap(p => p.team?.map(t => t.userId) || [])\r\n    ).size;\r\n    const teamUtilization = uniqueTeamMembers > 0 ? (totalTeamMembers / uniqueTeamMembers) : 0;\r\n\r\n    // Project type distribution\r\n    const projectTypes = filteredProjects.reduce((acc, p) => {\r\n      acc[p.type] = (acc[p.type] || 0) + 1;\r\n      return acc;\r\n    }, {} as Record<string, number>);\r\n\r\n    // Status distribution\r\n    const statusDistribution = filteredProjects.reduce((acc, p) => {\r\n      acc[p.status] = (acc[p.status] || 0) + 1;\r\n      return acc;\r\n    }, {} as Record<string, number>);\r\n\r\n    // Monthly progress\r\n    const monthlyProgress = calculateMonthlyProgress(filteredProjects);\r\n\r\n    // Performance metrics\r\n    const performanceMetrics = calculatePerformanceMetrics(filteredProjects);\r\n\r\n    return {\r\n      totalProjects,\r\n      activeProjects,\r\n      completedProjects,\r\n      onHoldProjects,\r\n      cancelledProjects,\r\n      totalBudget,\r\n      actualSpent,\r\n      budgetUtilization,\r\n      averageProjectDuration,\r\n      teamUtilization,\r\n      projectTypes,\r\n      statusDistribution,\r\n      monthlyProgress,\r\n      performanceMetrics\r\n    };\r\n  }, [projects, timeRange]);\r\n\r\n  // Filter projects by time range\r\n  function filterProjectsByTimeRange(projects: IProject[], range: string): IProject[] {\r\n    if (range === 'all') return projects;\r\n\r\n    const now = new Date();\r\n    let startDate: Date;\r\n\r\n    switch (range) {\r\n      case 'week':\r\n        startDate = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);\r\n        break;\r\n      case 'month':\r\n        startDate = new Date(now.getFullYear(), now.getMonth(), 1);\r\n        break;\r\n      case 'quarter':\r\n        const quarter = Math.floor(now.getMonth() / 3);\r\n        startDate = new Date(now.getFullYear(), quarter * 3, 1);\r\n        break;\r\n      case 'year':\r\n        startDate = new Date(now.getFullYear(), 0, 1);\r\n        break;\r\n      default:\r\n        return projects;\r\n    }\r\n\r\n    return projects.filter(p => {\r\n      if (p.timeline?.startDate) {\r\n        const projectStart = new Date(p.timeline.startDate);\r\n        return projectStart >= startDate;\r\n      }\r\n      return p.createdAt >= startDate;\r\n    });\r\n  }\r\n\r\n  // Calculate monthly progress\r\n  function calculateMonthlyProgress(projects: IProject[]) {\r\n    const months: Record<string, { completed: number; started: number; revenue: number }> = {};\r\n    \r\n    projects.forEach(project => {\r\n      if (project.timeline?.startDate) {\r\n        const startDate = new Date(project.timeline.startDate);\r\n        const monthKey = `${startDate.getFullYear()}-${String(startDate.getMonth() + 1).padStart(2, '0')}`;\r\n        \r\n        if (!months[monthKey]) {\r\n          months[monthKey] = { completed: 0, started: 0, revenue: 0 };\r\n        }\r\n        \r\n        months[monthKey].started++;\r\n        \r\n        if (project.status === 'completed') {\r\n          months[monthKey].completed++;\r\n        }\r\n        \r\n        if (project.budget?.actual) {\r\n          months[monthKey].revenue += project.budget.actual;\r\n        }\r\n      }\r\n    });\r\n\r\n    return Object.entries(months)\r\n      .map(([month, data]) => ({ month, ...data }))\r\n      .sort((a, b) => a.month.localeCompare(b.month));\r\n  }\r\n\r\n  // Calculate performance metrics\r\n  function calculatePerformanceMetrics(projects: IProject[]) {\r\n    const completedProjects = projects.filter(p => p.status === 'completed');\r\n    \r\n    // On-time delivery (projects completed within estimated timeline)\r\n    const onTimeProjects = completedProjects.filter(p => {\r\n      if (!p.timeline?.startDate || !p.timeline?.endDate || !p.timeline?.estimatedDuration) {\r\n        return false;\r\n      }\r\n      const actualDuration = (new Date(p.timeline.endDate).getTime() - new Date(p.timeline.startDate).getTime()) / (1000 * 60 * 60 * 24);\r\n      return actualDuration <= p.timeline.estimatedDuration;\r\n    });\r\n    const onTimeDelivery = completedProjects.length > 0 ? (onTimeProjects.length / completedProjects.length) * 100 : 0;\r\n\r\n    // Budget adherence (projects within 10% of estimated budget)\r\n    const budgetAdherentProjects = completedProjects.filter(p => {\r\n      if (!p.budget?.estimated || !p.budget?.actual) return false;\r\n      const variance = Math.abs(p.budget.actual - p.budget.estimated) / p.budget.estimated;\r\n      return variance <= 0.1;\r\n    });\r\n    const budgetAdherence = completedProjects.length > 0 ? (budgetAdherentProjects.length / completedProjects.length) * 100 : 0;\r\n\r\n    // Client satisfaction (placeholder - would come from actual feedback)\r\n    const clientSatisfaction = 85; // Mock data\r\n\r\n    // Resource efficiency (team utilization)\r\n    const resourceEfficiency = analyticsData.teamUtilization * 100;\r\n\r\n    return {\r\n      onTimeDelivery,\r\n      budgetAdherence,\r\n      clientSatisfaction,\r\n      resourceEfficiency\r\n    };\r\n  }\r\n\r\n  // Get metric change indicator\r\n  function getMetricChange(current: number, previous: number): { direction: 'up' | 'down' | 'stable'; value: number } {\r\n    if (current > previous) {\r\n      return { direction: 'up', value: ((current - previous) / previous) * 100 };\r\n    } else if (current < previous) {\r\n      return { direction: 'down', value: ((previous - current) / previous) * 100 };\r\n    }\r\n    return { direction: 'stable', value: 0 };\r\n  }\r\n\r\n  return (\r\n    <div className={`space-y-6 ${className}`}>\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h2 className=\"text-2xl font-bold text-gray-900\">Project Analytics</h2>\r\n          <p className=\"text-gray-600\">Comprehensive insights into your project portfolio</p>\r\n        </div>\r\n        \r\n        <div className=\"flex items-center space-x-2\">\r\n          <select\r\n            value={timeRange}\r\n            onChange={(e) => setSelectedMetric(e.target.value)}\r\n            className=\"px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n          >\r\n            <option value=\"week\">This Week</option>\r\n            <option value=\"month\">This Month</option>\r\n            <option value=\"quarter\">This Quarter</option>\r\n            <option value=\"year\">This Year</option>\r\n            <option value=\"all\">All Time</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Key Metrics Grid */}\r\n      {showMetrics && (\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n          <MetricCard\r\n            title=\"Total Projects\"\r\n            value={analyticsData.totalProjects}\r\n            icon={BarChart3}\r\n            change={getMetricChange(analyticsData.totalProjects, analyticsData.totalProjects * 0.9)}\r\n            color=\"blue\"\r\n          />\r\n          \r\n          <MetricCard\r\n            title=\"Active Projects\"\r\n            value={analyticsData.activeProjects}\r\n            icon={Activity}\r\n            change={getMetricChange(analyticsData.activeProjects, analyticsData.activeProjects * 0.95)}\r\n            color=\"green\"\r\n          />\r\n          \r\n          <MetricCard\r\n            title=\"Budget Utilization\"\r\n            value={`${analyticsData.budgetUtilization.toFixed(1)}%`}\r\n            icon={DollarSign}\r\n            change={getMetricChange(analyticsData.budgetUtilization, analyticsData.budgetUtilization * 0.9)}\r\n            color=\"purple\"\r\n          />\r\n          \r\n          <MetricCard\r\n            title=\"Team Utilization\"\r\n            value={`${analyticsData.teamUtilization.toFixed(1)}%`}\r\n            icon={Users}\r\n            change={getMetricChange(analyticsData.teamUtilization, analyticsData.teamUtilization * 0.95)}\r\n            color=\"orange\"\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {/* Performance Metrics */}\r\n      {showMetrics && (\r\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\r\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Performance Metrics</h3>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n            <PerformanceMetric\r\n              label=\"On-Time Delivery\"\r\n              value={analyticsData.performanceMetrics.onTimeDelivery}\r\n              target={90}\r\n              color=\"green\"\r\n            />\r\n            <PerformanceMetric\r\n              label=\"Budget Adherence\"\r\n              value={analyticsData.performanceMetrics.budgetAdherence}\r\n              target={85}\r\n              color=\"blue\"\r\n            />\r\n            <PerformanceMetric\r\n              label=\"Client Satisfaction\"\r\n              value={analyticsData.performanceMetrics.clientSatisfaction}\r\n              target={90}\r\n              color=\"purple\"\r\n            />\r\n            <PerformanceMetric\r\n              label=\"Resource Efficiency\"\r\n              value={analyticsData.performanceMetrics.resourceEfficiency}\r\n              target={80}\r\n              color=\"orange\"\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Charts Section */}\r\n      {showCharts && (\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n          {/* Status Distribution */}\r\n          <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\r\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Project Status Distribution</h3>\r\n            <div className=\"space-y-3\">\r\n              {Object.entries(analyticsData.statusDistribution).map(([status, count]) => (\r\n                <StatusBar\r\n                  key={status}\r\n                  status={status}\r\n                  count={count}\r\n                  total={analyticsData.totalProjects}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Project Types */}\r\n          <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\r\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Project Types</h3>\r\n            <div className=\"space-y-3\">\r\n              {Object.entries(analyticsData.projectTypes).map(([type, count]) => (\r\n                <TypeBar\r\n                  key={type}\r\n                  type={type}\r\n                  count={count}\r\n                  total={analyticsData.totalProjects}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Trends Section */}\r\n      {showTrends && (\r\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\r\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Monthly Progress Trends</h3>\r\n          <div className=\"space-y-4\">\r\n            {analyticsData.monthlyProgress.map((monthData, index) => (\r\n              <MonthlyProgressBar\r\n                key={monthData.month}\r\n                month={monthData.month}\r\n                completed={monthData.completed}\r\n                started={monthData.started}\r\n                revenue={monthData.revenue}\r\n                isLatest={index === analyticsData.monthlyProgress.length - 1}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Summary Stats */}\r\n      <div className=\"bg-gradient-to-r from-blue-50 to-indigo-50 rounded-lg p-6\">\r\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Summary</h3>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n          <div className=\"text-center\">\r\n            <div className=\"text-2xl font-bold text-blue-600\">\r\n              ${analyticsData.totalBudget.toLocaleString()}\r\n            </div>\r\n            <div className=\"text-sm text-gray-600\">Total Budget</div>\r\n          </div>\r\n          \r\n          <div className=\"text-center\">\r\n            <div className=\"text-2xl font-bold text-green-600\">\r\n              {analyticsData.averageProjectDuration.toFixed(1)} days\r\n            </div>\r\n            <div className=\"text-sm text-gray-600\">Avg. Project Duration</div>\r\n          </div>\r\n          \r\n          <div className=\"text-center\">\r\n            <div className=\"text-2xl font-bold text-purple-600\">\r\n              {analyticsData.completedProjects}\r\n            </div>\r\n            <div className=\"text-sm text-gray-600\">Projects Completed</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Metric Card Component\r\ninterface MetricCardProps {\r\n  title: string;\r\n  value: string | number;\r\n  icon: React.ComponentType<any>;\r\n  change: { direction: 'up' | 'down' | 'stable'; value: number };\r\n  color: string;\r\n}\r\n\r\nfunction MetricCard({ title, value, icon: Icon, change, color }: MetricCardProps) {\r\n  const colorClasses = {\r\n    blue: 'bg-blue-50 text-blue-600',\r\n    green: 'bg-green-50 text-green-600',\r\n    purple: 'bg-purple-50 text-purple-600',\r\n    orange: 'bg-orange-50 text-orange-600'\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      className=\"bg-white rounded-lg border border-gray-200 p-6 hover:shadow-lg transition-shadow\"\r\n      whileHover={{ y: -2 }}\r\n    >\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <p className=\"text-sm font-medium text-gray-600\">{title}</p>\r\n          <p className=\"text-2xl font-bold text-gray-900\">{value}</p>\r\n        </div>\r\n        <div className={`p-3 rounded-lg ${colorClasses[color as keyof typeof colorClasses]}`}>\r\n          <Icon size={24} />\r\n        </div>\r\n      </div>\r\n      \r\n      {change.direction !== 'stable' && (\r\n        <div className=\"flex items-center mt-4 text-sm\">\r\n          {change.direction === 'up' ? (\r\n            <ArrowUpRight className=\"w-4 h-4 text-green-500 mr-1\" />\r\n          ) : (\r\n            <ArrowDownRight className=\"w-4 h-4 text-red-500 mr-1\" />\r\n          )}\r\n          <span className={change.direction === 'up' ? 'text-green-600' : 'text-red-600'}>\r\n            {change.value.toFixed(1)}%\r\n          </span>\r\n          <span className=\"text-gray-500 ml-1\">from last period</span>\r\n        </div>\r\n      )}\r\n    </motion.div>\r\n  );\r\n}\r\n\r\n// Performance Metric Component\r\ninterface PerformanceMetricProps {\r\n  label: string;\r\n  value: number;\r\n  target: number;\r\n  color: string;\r\n}\r\n\r\nfunction PerformanceMetric({ label, value, target, color }: PerformanceMetricProps) {\r\n  const percentage = Math.min(value, 100);\r\n  const isAboveTarget = value >= target;\r\n  \r\n  const colorClasses = {\r\n    green: 'bg-green-100 text-green-800',\r\n    blue: 'bg-blue-100 text-blue-800',\r\n    purple: 'bg-purple-100 text-purple-800',\r\n    orange: 'bg-orange-100 text-orange-800'\r\n  };\r\n\r\n  return (\r\n    <div className=\"text-center\">\r\n      <div className={`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${colorClasses[color as keyof typeof colorClasses]} mb-2`}>\r\n        {isAboveTarget ? '✓' : '⚠'} {label}\r\n      </div>\r\n      <div className=\"text-2xl font-bold text-gray-900\">{value.toFixed(1)}%</div>\r\n      <div className=\"text-sm text-gray-500\">Target: {target}%</div>\r\n      \r\n      {/* Progress bar */}\r\n      <div className=\"w-full bg-gray-200 rounded-full h-2 mt-2\">\r\n        <div\r\n          className={`h-2 rounded-full transition-all duration-300 ${\r\n            isAboveTarget ? 'bg-green-500' : 'bg-orange-500'\r\n          }`}\r\n          style={{ width: `${percentage}%` }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Status Bar Component\r\ninterface StatusBarProps {\r\n  status: string;\r\n  count: number;\r\n  total: number;\r\n}\r\n\r\nfunction StatusBar({ status, count, total }: StatusBarProps) {\r\n  const percentage = total > 0 ? (count / total) * 100 : 0;\r\n  const statusColors = {\r\n    active: 'bg-green-500',\r\n    planning: 'bg-blue-500',\r\n    'on-hold': 'bg-yellow-500',\r\n    completed: 'bg-gray-500',\r\n    cancelled: 'bg-red-500'\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex items-center space-x-3\">\r\n      <div className=\"w-20 text-sm font-medium text-gray-700 capitalize\">{status}</div>\r\n      <div className=\"flex-1 bg-gray-200 rounded-full h-2\">\r\n        <div\r\n          className={`h-2 rounded-full transition-all duration-300 ${statusColors[status as keyof typeof statusColors] || 'bg-gray-500'}`}\r\n          style={{ width: `${percentage}%` }}\r\n        />\r\n      </div>\r\n      <div className=\"w-12 text-sm text-gray-600 text-right\">{count}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Type Bar Component\r\ninterface TypeBarProps {\r\n  type: string;\r\n  count: number;\r\n  total: number;\r\n}\r\n\r\nfunction TypeBar({ type, count, total }: TypeBarProps) {\r\n  const percentage = total > 0 ? (count / total) * 100 : 0;\r\n  const typeColors = {\r\n    residential: 'bg-purple-500',\r\n    commercial: 'bg-indigo-500',\r\n    industrial: 'bg-orange-500',\r\n    infrastructure: 'bg-teal-500',\r\n    renovation: 'bg-pink-500'\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex items-center space-x-3\">\r\n      <div className=\"w-24 text-sm font-medium text-gray-700 capitalize\">{type}</div>\r\n      <div className=\"flex-1 bg-gray-200 rounded-full h-2\">\r\n        <div\r\n          className={`h-2 rounded-full transition-all duration-300 ${typeColors[type as keyof typeof typeColors] || 'bg-gray-500'}`}\r\n          style={{ width: `${percentage}%` }}\r\n        />\r\n      </div>\r\n      <div className=\"w-12 text-sm text-gray-600 text-right\">{count}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Monthly Progress Bar Component\r\ninterface MonthlyProgressBarProps {\r\n  month: string;\r\n  completed: number;\r\n  started: number;\r\n  revenue: number;\r\n  isLatest: boolean;\r\n}\r\n\r\nfunction MonthlyProgressBar({ month, completed, started, revenue, isLatest }: MonthlyProgressBarProps) {\r\n  const monthNames = [\r\n    'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\r\n    'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'\r\n  ];\r\n  \r\n  const [year, monthNum] = month.split('-');\r\n  const monthName = monthNames[parseInt(monthNum) - 1];\r\n\r\n  return (\r\n    <div className={`flex items-center space-x-4 p-3 rounded-lg ${isLatest ? 'bg-blue-50 border border-blue-200' : 'bg-gray-50'}`}>\r\n      <div className=\"w-16 text-sm font-medium text-gray-700\">\r\n        {monthName} {year}\r\n      </div>\r\n      \r\n      <div className=\"flex-1 flex items-center space-x-4\">\r\n        <div className=\"text-center\">\r\n          <div className=\"text-sm font-medium text-gray-900\">{started}</div>\r\n          <div className=\"text-xs text-gray-500\">Started</div>\r\n        </div>\r\n        \r\n        <div className=\"text-center\">\r\n          <div className=\"text-sm font-medium text-green-600\">{completed}</div>\r\n          <div className=\"text-xs text-gray-500\">Completed</div>\r\n        </div>\r\n        \r\n        <div className=\"text-center\">\r\n          <div className=\"text-sm font-medium text-blue-600\">${revenue.toLocaleString()}</div>\r\n          <div className=\"text-xs text-gray-500\">Revenue</div>\r\n        </div>\r\n      </div>\r\n      \r\n      {isLatest && (\r\n        <div className=\"px-2 py-1 bg-blue-100 text-blue-800 text-xs rounded-full\">\r\n          Latest\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectAnalytics;\r\n","import React from 'react';\r\nimport { useOfflineProjects } from '../hooks/useOfflineProjects';\r\nimport { ProjectSyncService } from '../lib/sync/projectSync';\r\nimport { toast } from 'react-hot-toast';\r\n\r\ninterface SyncStatusProps {\r\n  showDetails?: boolean;\r\n  showActions?: boolean;\r\n  className?: string;\r\n}\r\n\r\nexport function SyncStatus({ \r\n  showDetails = true, \r\n  showActions = true, \r\n  className = '' \r\n}: SyncStatusProps) {\r\n  const { \r\n    isOnline, \r\n    syncStatus, \r\n    loading, \r\n    forceSync, \r\n    clearOldData \r\n  } = useOfflineProjects();\r\n\r\n  const handleForceSync = async () => {\r\n    try {\r\n      await forceSync();\r\n    } catch (error) {\r\n      console.error('Force sync failed:', error);\r\n    }\r\n  };\r\n\r\n  const handleClearOldData = async () => {\r\n    if (confirm('Are you sure you want to clear old synced data? This cannot be undone.')) {\r\n      try {\r\n        await clearOldData();\r\n      } catch (error) {\r\n        console.error('Clear old data failed:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getSyncStatusColor = () => {\r\n    if (!syncStatus) return 'text-gray-500';\r\n    \r\n    if (syncStatus.failedProjects > 0) return 'text-red-500';\r\n    if (syncStatus.pendingProjects > 0) return 'text-yellow-500';\r\n    return 'text-green-500';\r\n  };\r\n\r\n  const getSyncStatusText = () => {\r\n    if (!syncStatus) return 'Unknown';\r\n    \r\n    if (syncStatus.failedProjects > 0) return 'Sync Failed';\r\n    if (syncStatus.pendingProjects > 0) return 'Pending Sync';\r\n    return 'Synced';\r\n  };\r\n\r\n  const getLastSyncText = () => {\r\n    if (!syncStatus?.lastSync) return 'Never';\r\n    \r\n    const now = new Date();\r\n    const lastSync = new Date(syncStatus.lastSync);\r\n    const diffMs = now.getTime() - lastSync.getTime();\r\n    const diffMins = Math.floor(diffMs / (1000 * 60));\r\n    \r\n    if (diffMins < 1) return 'Just now';\r\n    if (diffMins < 60) return `${diffMins}m ago`;\r\n    \r\n    const diffHours = Math.floor(diffMins / 60);\r\n    if (diffHours < 24) return `${diffHours}h ago`;\r\n    \r\n    const diffDays = Math.floor(diffHours / 24);\r\n    return `${diffDays}d ago`;\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className={`sync-status loading ${className}`}>\r\n        <div className=\"flex items-center space-x-2\">\r\n          <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-blue-500\"></div>\r\n          <span className=\"text-sm text-gray-500\">Loading sync status...</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={`sync-status ${className}`}>\r\n      {/* Network Status */}\r\n      <div className=\"network-status mb-3\">\r\n        <div className=\"flex items-center space-x-2\">\r\n          <div className={`w-3 h-3 rounded-full ${isOnline ? 'bg-green-500' : 'bg-red-500'}`}></div>\r\n          <span className={`text-sm font-medium ${isOnline ? 'text-green-700' : 'text-red-700'}`}>\r\n            {isOnline ? 'Online' : 'Offline'}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Sync Status Summary */}\r\n      {syncStatus && (\r\n        <div className=\"sync-summary mb-3\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <span className={`text-sm font-medium ${getSyncStatusColor()}`}>\r\n              {getSyncStatusText()}\r\n            </span>\r\n            <span className=\"text-xs text-gray-500\">\r\n              Last sync: {getLastSyncText()}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Detailed Sync Information */}\r\n      {showDetails && syncStatus && (\r\n        <div className=\"sync-details mb-4 p-3 bg-gray-50 rounded-lg\">\r\n          <div className=\"grid grid-cols-2 gap-3 text-sm\">\r\n            <div className=\"sync-stat\">\r\n              <span className=\"text-gray-600\">Total Projects:</span>\r\n              <span className=\"font-medium ml-2\">{syncStatus.totalProjects}</span>\r\n            </div>\r\n            <div className=\"sync-stat\">\r\n              <span className=\"text-gray-600\">Synced:</span>\r\n              <span className=\"font-medium text-green-600 ml-2\">{syncStatus.syncedProjects}</span>\r\n            </div>\r\n            <div className=\"sync-stat\">\r\n              <span className=\"text-gray-600\">Pending:</span>\r\n              <span className=\"font-medium text-yellow-600 ml-2\">{syncStatus.pendingProjects}</span>\r\n            </div>\r\n            <div className=\"sync-stat\">\r\n              <span className=\"text-gray-600\">Failed:</span>\r\n              <span className=\"font-medium text-red-600 ml-2\">{syncStatus.failedProjects}</span>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Progress Bar */}\r\n          {syncStatus.totalProjects > 0 && (\r\n            <div className=\"sync-progress mt-3\">\r\n              <div className=\"flex justify-between text-xs text-gray-500 mb-1\">\r\n                <span>Sync Progress</span>\r\n                <span>{Math.round((syncStatus.syncedProjects / syncStatus.totalProjects) * 100)}%</span>\r\n              </div>\r\n              <div className=\"w-full bg-gray-200 rounded-full h-2\">\r\n                <div \r\n                  className=\"bg-green-500 h-2 rounded-full transition-all duration-300\"\r\n                  style={{ \r\n                    width: `${(syncStatus.syncedProjects / syncStatus.totalProjects) * 100}%` \r\n                  }}\r\n                ></div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Sync Actions */}\r\n      {showActions && (\r\n        <div className=\"sync-actions space-y-2\">\r\n          <button\r\n            onClick={handleForceSync}\r\n            disabled={!isOnline || loading}\r\n            className=\"w-full px-3 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 disabled:opacity-50 disabled:cursor-not-allowed text-sm font-medium transition-colors\"\r\n          >\r\n            {loading ? 'Syncing...' : 'Force Sync'}\r\n          </button>\r\n          \r\n          <button\r\n            onClick={handleClearOldData}\r\n            disabled={loading}\r\n            className=\"w-full px-3 py-2 bg-gray-500 text-white rounded-md hover:bg-gray-600 disabled:opacity-50 disabled:cursor-not-allowed text-sm font-medium transition-colors\"\r\n          >\r\n            Clear Old Data\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Offline Notice */}\r\n      {!isOnline && (\r\n        <div className=\"offline-notice mt-3 p-2 bg-yellow-50 border border-yellow-200 rounded-md\">\r\n          <p className=\"text-xs text-yellow-800\">\r\n            You're currently offline. Changes will be saved locally and synced when you're back online.\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Sync Issues Notice */}\r\n      {syncStatus?.failedProjects && syncStatus.failedProjects > 0 && (\r\n        <div className=\"sync-issues mt-3 p-2 bg-red-50 border border-red-200 rounded-md\">\r\n          <p className=\"text-xs text-red-800\">\r\n            {syncStatus.failedProjects} project(s) failed to sync. Please check your connection and try again.\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Compact version for headers/toolbars\r\nexport function CompactSyncStatus() {\r\n  const { isOnline, syncStatus } = useOfflineProjects();\r\n\r\n  if (!syncStatus) return null;\r\n\r\n  const hasPendingChanges = syncStatus.pendingProjects > 0;\r\n  const hasFailedChanges = syncStatus.failedProjects > 0;\r\n\r\n  return (\r\n    <div className=\"compact-sync-status flex items-center space-x-2\">\r\n      {/* Network Indicator */}\r\n      <div className=\"flex items-center space-x-1\">\r\n        <div className={`w-2 h-2 rounded-full ${isOnline ? 'bg-green-500' : 'bg-red-500'}`}></div>\r\n        <span className=\"text-xs text-gray-600\">\r\n          {isOnline ? 'Online' : 'Offline'}\r\n        </span>\r\n      </div>\r\n\r\n      {/* Sync Status */}\r\n      {hasPendingChanges && (\r\n        <div className=\"flex items-center space-x-1\">\r\n          <div className=\"w-2 h-2 rounded-full bg-yellow-500\"></div>\r\n          <span className=\"text-xs text-yellow-600\">\r\n            {syncStatus.pendingProjects} pending\r\n          </span>\r\n        </div>\r\n      )}\r\n\r\n      {hasFailedChanges && (\r\n        <div className=\"flex items-center space-x-1\">\r\n          <div className=\"w-2 h-2 rounded-full bg-red-500\"></div>\r\n          <span className=\"text-xs text-red-600\">\r\n            {syncStatus.failedProjects} failed\r\n          </span>\r\n        </div>\r\n      )}\r\n\r\n      {/* All Synced */}\r\n      {!hasPendingChanges && !hasFailedChanges && syncStatus.totalProjects > 0 && (\r\n        <div className=\"flex items-center space-x-1\">\r\n          <div className=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n          <span className=\"text-xs text-green-600\">Synced</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Export both components\r\nexport default SyncStatus;\r\n","import React, { useState, useCallback, useRef, useEffect, useMemo } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { ChevronRight, Eye, Edit, Trash2, MoreHorizontal } from 'lucide-react';\r\nimport { IProject } from '@/models/Project';\r\n\r\ninterface VirtualProjectListProps {\r\n  projects: IProject[];\r\n  itemHeight?: number;\r\n  containerHeight?: number;\r\n  onProjectClick?: (project: IProject) => void;\r\n  onEditProject?: (project: IProject) => void;\r\n  onDeleteProject?: (project: IProject) => void;\r\n  onViewProject?: (project: IProject) => void;\r\n  loading?: boolean;\r\n  emptyMessage?: string;\r\n  className?: string;\r\n  showActions?: boolean;\r\n  searchTerm?: string;\r\n  filters?: {\r\n    status?: string;\r\n    type?: string;\r\n    client?: string;\r\n  };\r\n}\r\n\r\ninterface VirtualItem {\r\n  index: number;\r\n  project: IProject;\r\n  top: number;\r\n  height: number;\r\n}\r\n\r\nexport function VirtualProjectList({\r\n  projects,\r\n  itemHeight = 80,\r\n  containerHeight = 600,\r\n  onProjectClick,\r\n  onEditProject,\r\n  onDeleteProject,\r\n  onViewProject,\r\n  loading = false,\r\n  emptyMessage = 'No projects found',\r\n  className = '',\r\n  showActions = true,\r\n  searchTerm = '',\r\n  filters = {}\r\n}: VirtualProjectListProps) {\r\n  const [scrollTop, setScrollTop] = useState(0);\r\n  const [containerRef, setContainerRef] = useState<HTMLDivElement | null>(null);\r\n  const [selectedProject, setSelectedProject] = useState<string | null>(null);\r\n  const [expandedProjects, setExpandedProjects] = useState<Set<string>>(new Set());\r\n\r\n  // Filter and search projects\r\n  const filteredProjects = useMemo(() => {\r\n    let filtered = projects;\r\n\r\n    // Apply search filter\r\n    if (searchTerm) {\r\n      const searchLower = searchTerm.toLowerCase();\r\n      filtered = filtered.filter(project =>\r\n        project.name.toLowerCase().includes(searchLower) ||\r\n        project.description.toLowerCase().includes(searchLower) ||\r\n        project.client.name.toLowerCase().includes(searchLower) ||\r\n        project.client.company?.toLowerCase().includes(searchLower) ||\r\n        project.tags.some(tag => tag.toLowerCase().includes(searchLower))\r\n      );\r\n    }\r\n\r\n    // Apply status filter\r\n    if (filters.status) {\r\n      filtered = filtered.filter(project => project.status === filters.status);\r\n    }\r\n\r\n    // Apply type filter\r\n    if (filters.type) {\r\n      filtered = filtered.filter(project => project.type === filters.type);\r\n    }\r\n\r\n    // Apply client filter\r\n    if (filters.client) {\r\n      filtered = filtered.filter(project =>\r\n        project.client.name.toLowerCase().includes(filters.client!.toLowerCase()) ||\r\n        project.client.company?.toLowerCase().includes(filters.client!.toLowerCase())\r\n      );\r\n    }\r\n\r\n    return filtered;\r\n  }, [projects, searchTerm, filters]);\r\n\r\n  // Calculate virtual items\r\n  const virtualItems = useMemo(() => {\r\n    const startIndex = Math.floor(scrollTop / itemHeight);\r\n    const endIndex = Math.min(\r\n      startIndex + Math.ceil(containerHeight / itemHeight) + 1,\r\n      filteredProjects.length\r\n    );\r\n\r\n    const items: VirtualItem[] = [];\r\n    for (let i = startIndex; i < endIndex; i++) {\r\n      items.push({\r\n        index: i,\r\n        project: filteredProjects[i],\r\n        top: i * itemHeight,\r\n        height: itemHeight\r\n      });\r\n    }\r\n\r\n    return items;\r\n  }, [scrollTop, containerHeight, itemHeight, filteredProjects]);\r\n\r\n  // Handle scroll\r\n  const handleScroll = useCallback((event: React.UIEvent<HTMLDivElement>) => {\r\n    setScrollTop(event.currentTarget.scrollTop);\r\n  }, []);\r\n\r\n  // Toggle project expansion\r\n  const toggleExpansion = useCallback((projectId: string) => {\r\n    setExpandedProjects(prev => {\r\n      const newSet = new Set(prev);\r\n      if (newSet.has(projectId)) {\r\n        newSet.delete(projectId);\r\n      } else {\r\n        newSet.add(projectId);\r\n      }\r\n      return newSet;\r\n    });\r\n  }, []);\r\n\r\n  // Handle project selection\r\n  const handleProjectClick = useCallback((project: IProject) => {\r\n    setSelectedProject(project._id?.toString() || null);\r\n    onProjectClick?.(project);\r\n  }, [onProjectClick]);\r\n\r\n  // Get status color\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'active': return 'bg-green-100 text-green-800';\r\n      case 'planning': return 'bg-blue-100 text-blue-800';\r\n      case 'on-hold': return 'bg-yellow-100 text-yellow-800';\r\n      case 'completed': return 'bg-gray-100 text-gray-800';\r\n      case 'cancelled': return 'bg-red-100 text-red-800';\r\n      default: return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  // Get type color\r\n  const getTypeColor = (type: string) => {\r\n    switch (type) {\r\n      case 'residential': return 'bg-purple-100 text-purple-800';\r\n      case 'commercial': return 'bg-indigo-100 text-indigo-800';\r\n      case 'industrial': return 'bg-orange-100 text-orange-800';\r\n      case 'infrastructure': return 'bg-teal-100 text-teal-800';\r\n      case 'renovation': return 'bg-pink-100 text-pink-800';\r\n      default: return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  // Calculate total height for scrollbar\r\n  const totalHeight = filteredProjects.length * itemHeight;\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className={`flex items-center justify-center h-64 ${className}`}>\r\n        <div className=\"flex flex-col items-center space-y-4\">\r\n          <div className=\"w-8 h-8 border-4 border-blue-500 border-t-transparent rounded-full animate-spin\" />\r\n          <p className=\"text-gray-600\">Loading projects...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (filteredProjects.length === 0) {\r\n    return (\r\n      <div className={`flex flex-col items-center justify-center h-64 text-gray-500 ${className}`}>\r\n        <div className=\"w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mb-4\">\r\n          <Eye size={24} />\r\n        </div>\r\n        <p className=\"text-lg font-medium\">{emptyMessage}</p>\r\n        {searchTerm && (\r\n          <p className=\"text-sm text-gray-400 mt-2\">\r\n            No projects match \"{searchTerm}\"\r\n          </p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={`relative ${className}`}>\r\n      {/* Virtual List Container */}\r\n      <div\r\n        ref={setContainerRef}\r\n        className=\"overflow-auto border border-gray-200 rounded-lg\"\r\n        style={{ height: containerHeight }}\r\n        onScroll={handleScroll}\r\n      >\r\n        {/* Scrollable content with proper height */}\r\n        <div style={{ height: totalHeight, position: 'relative' }}>\r\n          {/* Virtual items */}\r\n          <AnimatePresence>\r\n            {virtualItems.map(({ index, project, top, height }) => (\r\n              <motion.div\r\n                key={project._id?.toString() || index}\r\n                className=\"absolute left-0 right-0\"\r\n                style={{ top, height }}\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                exit={{ opacity: 0, y: -20 }}\r\n                transition={{ duration: 0.2 }}\r\n              >\r\n                <ProjectListItem\r\n                  project={project}\r\n                  isSelected={selectedProject === project._id}\r\n                  isExpanded={expandedProjects.has(project._id?.toString() || '')}\r\n                  onToggleExpansion={() => toggleExpansion(project._id?.toString() || '')}\r\n                  onClick={() => handleProjectClick(project)}\r\n                  onEdit={() => onEditProject?.(project)}\r\n                  onDelete={() => onDeleteProject?.(project)}\r\n                  onView={() => onViewProject?.(project)}\r\n                  showActions={showActions}\r\n                  getStatusColor={getStatusColor}\r\n                  getTypeColor={getTypeColor}\r\n                />\r\n              </motion.div>\r\n            ))}\r\n          </AnimatePresence>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Scroll indicator */}\r\n      {filteredProjects.length > Math.ceil(containerHeight / itemHeight) && (\r\n        <div className=\"absolute bottom-2 right-2 bg-gray-800 text-white text-xs px-2 py-1 rounded\">\r\n          {Math.floor(scrollTop / itemHeight) + 1} - {Math.min(Math.floor(scrollTop / itemHeight) + Math.ceil(containerHeight / itemHeight), filteredProjects.length)} of {filteredProjects.length}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Individual project list item component\r\ninterface ProjectListItemProps {\r\n  project: IProject;\r\n  isSelected: boolean;\r\n  isExpanded: boolean;\r\n  onToggleExpansion: () => void;\r\n  onClick: () => void;\r\n  onEdit: () => void;\r\n  onDelete: () => void;\r\n  onView: () => void;\r\n  showActions: boolean;\r\n  getStatusColor: (status: string) => string;\r\n  getTypeColor: (type: string) => string;\r\n}\r\n\r\nfunction ProjectListItem({\r\n  project,\r\n  isSelected,\r\n  isExpanded,\r\n  onToggleExpansion,\r\n  onClick,\r\n  onEdit,\r\n  onDelete,\r\n  onView,\r\n  showActions,\r\n  getStatusColor,\r\n  getTypeColor\r\n}: ProjectListItemProps) {\r\n  return (\r\n    <div\r\n      className={`\r\n        border-b border-gray-100 hover:bg-gray-50 transition-colors cursor-pointer\r\n        ${isSelected ? 'bg-blue-50 border-blue-200' : ''}\r\n      `}\r\n      onClick={onClick}\r\n    >\r\n      <div className=\"p-4\">\r\n        {/* Header */}\r\n        <div className=\"flex items-center justify-between mb-2\">\r\n          <div className=\"flex items-center space-x-3 flex-1 min-w-0\">\r\n            <button\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                onToggleExpansion();\r\n              }}\r\n              className=\"p-1 hover:bg-gray-200 rounded transition-colors\"\r\n            >\r\n              <motion.div\r\n                animate={{ rotate: isExpanded ? 90 : 0 }}\r\n                transition={{ duration: 0.2 }}\r\n              >\r\n                <ChevronRight size={16} className=\"text-gray-500\" />\r\n              </motion.div>\r\n            </button>\r\n            \r\n            <h3 className=\"font-medium text-gray-900 truncate flex-1\">\r\n              {project.name}\r\n            </h3>\r\n          </div>\r\n\r\n          {/* Status and Type badges */}\r\n          <div className=\"flex items-center space-x-2 flex-shrink-0\">\r\n            <span className={`px-2 py-1 text-xs font-medium rounded-full ${getStatusColor(project.status)}`}>\r\n              {project.status}\r\n            </span>\r\n            <span className={`px-2 py-1 text-xs font-medium rounded-full ${getTypeColor(project.type)}`}>\r\n              {project.type}\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Description */}\r\n        <p className=\"text-sm text-gray-600 mb-3 line-clamp-2\">\r\n          {project.description}\r\n        </p>\r\n\r\n        {/* Client and Location */}\r\n        <div className=\"flex items-center justify-between text-sm text-gray-500 mb-3\">\r\n          <div className=\"flex items-center space-x-4\">\r\n            <span>Client: {project.client.name}</span>\r\n            <span>Location: {project.location.city}, {project.location.state}</span>\r\n          </div>\r\n          \r\n          {project.budget?.estimated && (\r\n            <span className=\"font-medium text-gray-700\">\r\n              ${project.budget.estimated.toLocaleString()}\r\n            </span>\r\n          )}\r\n        </div>\r\n\r\n        {/* Expanded content */}\r\n        <AnimatePresence>\r\n          {isExpanded && (\r\n            <motion.div\r\n              initial={{ height: 0, opacity: 0 }}\r\n              animate={{ height: 'auto', opacity: 1 }}\r\n              exit={{ height: 0, opacity: 0 }}\r\n              transition={{ duration: 0.3 }}\r\n              className=\"overflow-hidden\"\r\n            >\r\n              <div className=\"pt-3 border-t border-gray-100 space-y-3\">\r\n                {/* Timeline */}\r\n                {project.timeline && (\r\n                  <div className=\"text-sm\">\r\n                    <span className=\"font-medium text-gray-700\">Timeline: </span>\r\n                    {project.timeline.startDate && (\r\n                      <span>Start: {new Date(project.timeline.startDate).toLocaleDateString()}</span>\r\n                    )}\r\n                    {project.timeline.endDate && (\r\n                      <span className=\"ml-2\">End: {new Date(project.timeline.endDate).toLocaleDateString()}</span>\r\n                    )}\r\n                  </div>\r\n                )}\r\n\r\n                {/* Team */}\r\n                {project.team && project.team.length > 0 && (\r\n                  <div className=\"text-sm\">\r\n                    <span className=\"font-medium text-gray-700\">Team: </span>\r\n                    <span>{project.team.length} member(s)</span>\r\n                  </div>\r\n                )}\r\n\r\n                {/* Tags */}\r\n                {project.tags && project.tags.length > 0 && (\r\n                  <div className=\"text-sm\">\r\n                    <span className=\"font-medium text-gray-700\">Tags: </span>\r\n                    <div className=\"flex flex-wrap gap-1 mt-1\">\r\n                      {project.tags.map((tag, index) => (\r\n                        <span\r\n                          key={index}\r\n                          className=\"px-2 py-1 bg-gray-100 text-gray-700 text-xs rounded\"\r\n                        >\r\n                          {tag}\r\n                        </span>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </motion.div>\r\n          )}\r\n        </AnimatePresence>\r\n\r\n        {/* Actions */}\r\n        {showActions && (\r\n          <div className=\"flex items-center justify-end space-x-2 pt-3 border-t border-gray-100\">\r\n            <button\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                onView();\r\n              }}\r\n              className=\"p-2 text-gray-400 hover:text-blue-600 hover:bg-blue-50 rounded transition-colors\"\r\n              title=\"View project\"\r\n            >\r\n              <Eye size={16} />\r\n            </button>\r\n            \r\n            <button\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                onEdit();\r\n              }}\r\n              className=\"p-2 text-gray-400 hover:text-green-600 hover:bg-green-50 rounded transition-colors\"\r\n              title=\"Edit project\"\r\n            >\r\n              <Edit size={16} />\r\n            </button>\r\n            \r\n            <button\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                onDelete();\r\n              }}\r\n              className=\"p-2 text-gray-400 hover:text-red-600 hover:bg-red-50 rounded transition-colors\"\r\n              title=\"Delete project\"\r\n            >\r\n              <Trash2 size={16} />\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VirtualProjectList;\r\n","import { useState, useEffect, useCallback } from 'react';\r\nimport { toast } from 'react-hot-toast';\r\n\r\nexport interface DemoData {\r\n  projectCount: number;\r\n  userCount: number;\r\n  isLoaded: boolean;\r\n  lastUpdated: Date | null;\r\n}\r\n\r\nexport interface UseDemoModeReturn {\r\n  isDemoMode: boolean;\r\n  toggleDemoMode: () => void;\r\n  demoData: DemoData;\r\n  loadDemoData: () => Promise<void>;\r\n  clearDemoData: () => void;\r\n  isLoading: boolean;\r\n}\r\n\r\nconst DEMO_MODE_KEY = 'slate360_demo_mode';\r\nconst DEMO_DATA_KEY = 'slate360_demo_data';\r\n\r\nexport function useDemoMode(): UseDemoModeReturn {\r\n  const [isDemoMode, setIsDemoMode] = useState(false);\r\n  const [demoData, setDemoData] = useState<DemoData>({\r\n    projectCount: 0,\r\n    userCount: 0,\r\n    isLoaded: false,\r\n    lastUpdated: null\r\n  });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  // Load demo mode state from localStorage on mount\r\n  useEffect(() => {\r\n    const savedDemoMode = localStorage.getItem(DEMO_MODE_KEY);\r\n    if (savedDemoMode === 'true') {\r\n      setIsDemoMode(true);\r\n      loadSavedDemoData();\r\n    }\r\n  }, []);\r\n\r\n  // Load saved demo data from localStorage\r\n  const loadSavedDemoData = useCallback(() => {\r\n    try {\r\n      const savedData = localStorage.getItem(DEMO_DATA_KEY);\r\n      if (savedData) {\r\n        const parsed = JSON.parse(savedData);\r\n        setDemoData({\r\n          ...parsed,\r\n          lastUpdated: parsed.lastUpdated ? new Date(parsed.lastUpdated) : null\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to load saved demo data:', error);\r\n    }\r\n  }, []);\r\n\r\n  // Save demo mode state to localStorage\r\n  const saveDemoModeState = useCallback((enabled: boolean) => {\r\n    localStorage.setItem(DEMO_MODE_KEY, enabled.toString());\r\n  }, []);\r\n\r\n  // Save demo data to localStorage\r\n  const saveDemoData = useCallback((data: DemoData) => {\r\n    try {\r\n      localStorage.setItem(DEMO_DATA_KEY, JSON.stringify(data));\r\n    } catch (error) {\r\n      console.error('Failed to save demo data:', error);\r\n    }\r\n  }, []);\r\n\r\n  // Load demo data (simulate API call)\r\n  const loadDemoData = useCallback(async () => {\r\n    if (!isDemoMode) return;\r\n\r\n    setIsLoading(true);\r\n    \r\n    try {\r\n      // Simulate API delay\r\n      await new Promise(resolve => setTimeout(resolve, 800));\r\n\r\n      // Generate sample demo data\r\n      const newDemoData: DemoData = {\r\n        projectCount: Math.floor(Math.random() * 15) + 5, // 5-20 projects\r\n        userCount: Math.floor(Math.random() * 8) + 3, // 3-11 users\r\n        isLoaded: true,\r\n        lastUpdated: new Date()\r\n      };\r\n\r\n      setDemoData(newDemoData);\r\n      saveDemoData(newDemoData);\r\n\r\n      toast.success(`Demo mode activated! Loaded ${newDemoData.projectCount} sample projects.`);\r\n      \r\n    } catch (error) {\r\n      console.error('Failed to load demo data:', error);\r\n      toast.error('Failed to load demo data. Please try again.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [isDemoMode, saveDemoData]);\r\n\r\n  // Clear demo data\r\n  const clearDemoData = useCallback(() => {\r\n    setDemoData({\r\n      projectCount: 0,\r\n      userCount: 0,\r\n      isLoaded: false,\r\n      lastUpdated: null\r\n    });\r\n    localStorage.removeItem(DEMO_DATA_KEY);\r\n  }, []);\r\n\r\n  // Toggle demo mode\r\n  const toggleDemoMode = useCallback(async () => {\r\n    const newMode = !isDemoMode;\r\n    \r\n    if (newMode) {\r\n      // Enabling demo mode\r\n      setIsDemoMode(true);\r\n      saveDemoModeState(true);\r\n      await loadDemoData();\r\n    } else {\r\n      // Disabling demo mode\r\n      setIsDemoMode(false);\r\n      saveDemoModeState(false);\r\n      clearDemoData();\r\n      toast.success('Demo mode disabled. Switched to live mode.');\r\n    }\r\n  }, [isDemoMode, saveDemoModeState, loadDemoData, clearDemoData]);\r\n\r\n  // Auto-load demo data when demo mode is enabled\r\n  useEffect(() => {\r\n    if (isDemoMode && !demoData.isLoaded) {\r\n      loadDemoData();\r\n    }\r\n  }, [isDemoMode, demoData.isLoaded, loadDemoData]);\r\n\r\n  return {\r\n    isDemoMode,\r\n    toggleDemoMode,\r\n    demoData,\r\n    loadDemoData,\r\n    clearDemoData,\r\n    isLoading\r\n  };\r\n}\r\n\r\nexport default useDemoMode;\r\n"],"names":["DemoModeToggle","param","onDemoModeChange","className","isCEO","isAdmin","useRole","isDemoMode","setIsDemoMode","useState","isLoading","setIsLoading","lastAction","setLastAction","useEffect","localStorage","getItem","handleToggle","disableDemoMode","removeItem","enableDemoMode","setItem","error","console","Promise","resolve","setTimeout","log","refreshDemoData","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","div","concat","jsx","Database","h3","p","motion","button","whileHover","scale","whileTap","onClick","disabled","title","RefreshCw","Fragment","Square","Play","span","CheckCircle","AlertCircle","Date","toLocaleDateString","initial","opacity","y","animate","HelpIcon","content","size","position","maxWidth","iconClassName","tooltipClassName","showCloseButton","autoClose","autoCloseDelay","trigger","ariaLabel","isOpen","setIsOpen","isHovered","setIsHovered","iconRef","useRef","tooltipRef","autoCloseTimeoutRef","currentSize","sizeConfig","sm","icon","padding","md","lg","currentPosition","positionConfig","top","tooltip","arrow","bottom","left","right","current","clearTimeout","handleClickOutside","contains","event","target","document","addEventListener","removeEventListener","handleEscape","key","ref","type","onMouseEnter","onMouseLeave","onFocus","onBlur","activeElement","style","width","height","aria-label","aria-expanded","aria-haspopup","variants","idle","rotate","hover","active","HelpCircle","AnimatePresence","hidden","x","visible","exit","transition","damping","stiffness","duration","role","aria-labelledby","undefined","aria-describedby","id","X","ReactMarkdown","remarkPlugins","remarkGfm","components","children","ul","ol","li","strong","em","code","isInline","pre","blockquote","a","href","rel","h1","h2","table","th","td","sizeClasses","xl","full","animationVariants","fade","slide","slideUp","Modal","onClose","closeOnOverlayClick","closeOnEscape","preventClose","overlayClassName","contentClassName","headerClassName","animation","animationDuration","ariaDescribedBy","modalRef","previousActiveElement","focus","body","overflow","getAnimationVariants","baseVariants","overlay","currentTarget","aria-modal","e","stopPropagation","tabIndex","ConfirmModal","onConfirm","message","confirmText","cancelText","confirmVariant","props","getConfirmButtonClasses","FormModal","onSubmit","submitText","submitVariant","loading","form","getSubmitButtonClasses","__webpack_exports__","ZP","ProcessGuide","steps","variant","theme","maxHeight","buttonClassName","panelClassName","showStepNumbers","showProgress","collapsible","defaultOpen","activeStep","setActiveStep","completedSteps","setCompletedSteps","Set","buttonRef","panelRef","currentTheme","themeConfig","light","panel","header","step","stepActive","stepCompleted","stepError","dark","blue","green","currentVariant","variantConfig","default","maxSteps","length","showDetails","compact","Math","min","detailed","displaySteps","slice","togglePanel","handleStepClick","stepId","markStepCompleted","prev","newSet","add","markStepError","delete","progress","getStepStatus","has","status","getStepStatusClasses","stepVariants","delay","i","aria-controls","BookOpen","ChevronUp","ChevronDown","map","index","statusClasses","custom","h4","description","requirements","req","reqIndex","tips","tip","tipIndex","ProjectAnalytics","projects","showCharts","showMetrics","showTrends","timeRange","selectedMetric","setSelectedMetric","analyticsData","useMemo","filteredProjects","filterProjectsByTimeRange","range","startDate","now","getTime","getFullYear","getMonth","quarter","floor","filter","timeline","projectStart","createdAt","totalProjects","activeProjects","completedProjects","onHoldProjects","cancelledProjects","totalBudget","reduce","sum","budget","estimated","actualSpent","actual","projectsWithTimeline","endDate","averageProjectDuration","start","end","totalTeamMembers","team","uniqueTeamMembers","flatMap","t","userId","projectTypes","acc","budgetUtilization","teamUtilization","statusDistribution","monthlyProgress","calculateMonthlyProgress","months","forEach","project","monthKey","String","padStart","completed","started","revenue","Object","entries","month","data","sort","b","localeCompare","performanceMetrics","calculatePerformanceMetrics","onTimeProjects","estimatedDuration","actualDuration","onTimeDelivery","budgetAdherentProjects","variance","abs","budgetAdherence","clientSatisfaction","resourceEfficiency","getMetricChange","previous","direction","value","select","onChange","option","MetricCard","BarChart3","change","color","Activity","toFixed","DollarSign","Users","PerformanceMetric","label","count","StatusBar","total","TypeBar","monthData","MonthlyProgressBar","isLatest","toLocaleString","Icon","colorClasses","purple","orange","ArrowUpRight","ArrowDownRight","isAboveTarget","percentage","statusColors","planning","cancelled","typeColors","residential","commercial","industrial","infrastructure","renovation","year","monthNum","split","monthName","monthNames","parseInt","SyncStatus","showActions","isOnline","syncStatus","forceSync","clearOldData","useOfflineProjects","handleForceSync","handleClearOldData","confirm","failedProjects","pendingProjects","getLastSyncText","lastSync","diffMins","diffMs","diffHours","syncedProjects","round","VirtualProjectList","itemHeight","containerHeight","onProjectClick","onEditProject","onDeleteProject","onViewProject","emptyMessage","searchTerm","filters","scrollTop","setScrollTop","containerRef","setContainerRef","selectedProject","setSelectedProject","expandedProjects","setExpandedProjects","filtered","searchLower","toLowerCase","name","includes","client","company","tags","some","tag","virtualItems","startIndex","endIndex","ceil","items","push","handleScroll","useCallback","toggleExpansion","projectId","handleProjectClick","_id","toString","getStatusColor","getTypeColor","totalHeight","Eye","onScroll","ProjectListItem","isSelected","isExpanded","onToggleExpansion","onEdit","onDelete","onView","ChevronRight","location","city","state","Edit","Trash2","DEMO_MODE_KEY","DEMO_DATA_KEY","useDemoMode","demoData","setDemoData","projectCount","userCount","isLoaded","lastUpdated","loadSavedDemoData","savedData","parsed","JSON","parse","saveDemoModeState","enabled","saveDemoData","stringify","loadDemoData","newDemoData","random","toast","success","clearDemoData","toggleDemoMode"],"sourceRoot":""}